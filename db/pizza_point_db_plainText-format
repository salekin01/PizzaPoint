--
-- PostgreSQL database dump
--

-- Dumped from database version 12.0
-- Dumped by pg_dump version 12.0

-- Started on 2021-02-24 00:03:25

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 2 (class 3079 OID 25885)
-- Name: pldbgapi; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pldbgapi WITH SCHEMA public;


--
-- TOC entry 3128 (class 0 OID 0)
-- Dependencies: 2
-- Name: EXTENSION pldbgapi; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pldbgapi IS 'server-side support for debugging PL/pgSQL functions';


--
-- TOC entry 775 (class 1247 OID 26200)
-- Name: t_data; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.t_data AS (
	x integer,
	y text
);


ALTER TYPE public.t_data OWNER TO postgres;

--
-- TOC entry 778 (class 1247 OID 26235)
-- Name: t_order; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.t_order AS (
	order_ingredient_id bigint,
	supplier_goods_id bigint,
	ingredient_id bigint,
	supplier_id bigint,
	units_in_stock integer
);


ALTER TYPE public.t_order OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 218 (class 1259 OID 25556)
-- Name: baker; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.baker (
    baker_id bigint NOT NULL,
    baker_name text NOT NULL,
    address text,
    phone text,
    email text,
    created_date timestamp(0) without time zone,
    updated_date timestamp(0) without time zone,
    pass text,
    role_id bigint
);


ALTER TABLE public.baker OWNER TO postgres;

--
-- TOC entry 287 (class 1255 OID 25965)
-- Name: fn_baker_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_baker_get_all() RETURNS SETOF public.baker
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM baker b
	ORDER BY b.baker_id DESC;
END;
$$;


ALTER FUNCTION public.fn_baker_get_all() OWNER TO postgres;

--
-- TOC entry 350 (class 1255 OID 26244)
-- Name: fn_baker_goods_for_customer_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_baker_goods_for_customer_get_all() RETURNS TABLE(baker_goods_id bigint, ingredient_id bigint, quantity_per_unit integer, unit_price numeric, units_in_stock integer, hidden boolean, created_date timestamp without time zone, updated_date timestamp without time zone, ingredient_name text, ingredient_category_id bigint, regional_province_id bigint, regional_province_name text, category_name text)
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT bg.baker_goods_id,
		   bg.ingredient_id,
		   bg.quantity_per_unit,
		   bg.unit_price,
		   bg.units_in_stock,
		   bg.hidden,
		   bg.created_date,
		   bg.updated_date,
		   i.ingredient_name,
		   i.ingredient_category_id,
		   i.regional_province_id,
		   r.regional_province_name,
		   cat.category_name
	FROM public.baker_goods bg
	INNER JOIN public.ingredient_detail i
	ON bg.ingredient_id = i.ingredient_id
	INNER JOIN public.regional_province r
	ON i.regional_province_id = r.regional_province_id
	INNER JOIN public.ingredient_category cat
	ON i.ingredient_category_id = cat.ingredient_category_id
	AND bg.hidden = false 
	AND bg.units_in_stock > 0;
END;
$$;


ALTER FUNCTION public.fn_baker_goods_for_customer_get_all() OWNER TO postgres;

--
-- TOC entry 345 (class 1255 OID 26193)
-- Name: fn_baker_goods_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_baker_goods_get_all() RETURNS TABLE(baker_goods_id bigint, ingredient_id bigint, quantity_per_unit integer, unit_price numeric, units_in_stock integer, hidden boolean, created_date timestamp without time zone, updated_date timestamp without time zone, ingredient_name text, ingredient_category_id bigint, regional_province_id bigint, regional_province_name text, category_name text)
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT bg.baker_goods_id,
		   bg.ingredient_id,
		   bg.quantity_per_unit,
		   bg.unit_price,
		   bg.units_in_stock,
		   bg.hidden,
		   bg.created_date,
		   bg.updated_date,
		   i.ingredient_name,
		   i.ingredient_category_id,
		   i.regional_province_id,
		   r.regional_province_name,
		   cat.category_name
	FROM public.baker_goods bg
	INNER JOIN public.ingredient_detail i
	ON bg.ingredient_id = i.ingredient_id
	INNER JOIN public.regional_province r
	ON i.regional_province_id = r.regional_province_id
	INNER JOIN public.ingredient_category cat
	ON i.ingredient_category_id = cat.ingredient_category_id;
END;
$$;


ALTER FUNCTION public.fn_baker_goods_get_all() OWNER TO postgres;

--
-- TOC entry 214 (class 1259 OID 25534)
-- Name: baker_goods; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.baker_goods (
    baker_goods_id bigint NOT NULL,
    ingredient_id bigint NOT NULL,
    quantity_per_unit integer,
    unit_price numeric(15,2),
    units_in_stock integer,
    created_date timestamp(0) without time zone,
    updated_date timestamp(0) without time zone,
    hidden boolean DEFAULT false
);


ALTER TABLE public.baker_goods OWNER TO postgres;

--
-- TOC entry 319 (class 1255 OID 26080)
-- Name: fn_baker_goods_get_by_baker_goods_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_baker_goods_get_by_baker_goods_id(p_baker_goods_id bigint) RETURNS SETOF public.baker_goods
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM baker_goods 
	WHERE baker_goods_id = p_baker_goods_id;
END;
$$;


ALTER FUNCTION public.fn_baker_goods_get_by_baker_goods_id(p_baker_goods_id bigint) OWNER TO postgres;

--
-- TOC entry 331 (class 1255 OID 26113)
-- Name: fn_customer_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_customer_get_all() RETURNS TABLE(p_customer_id bigint, p_customer_name text, p_phone text, p_email text, p_shipping_info text, p_role_id bigint)
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT cus.customer_id,
		   cus.customer_name,
		   cus.phone,
		   cus.email,
		   cus.shipping_info,
		   cus.role_id
	FROM customer cus
	ORDER BY cus.customer_id DESC;
END;
$$;


ALTER FUNCTION public.fn_customer_get_all() OWNER TO postgres;

--
-- TOC entry 216 (class 1259 OID 25546)
-- Name: customer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.customer (
    customer_id bigint NOT NULL,
    customer_name text,
    address text,
    phone text,
    email text,
    shipping_info text,
    created_date timestamp(0) without time zone,
    updated_date timestamp(0) without time zone,
    pass text,
    role_id bigint
);


ALTER TABLE public.customer OWNER TO postgres;

--
-- TOC entry 358 (class 1255 OID 26268)
-- Name: fn_customer_get_by_customer_email(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_customer_get_by_customer_email(p_email text) RETURNS SETOF public.customer
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM customer 
	WHERE email = p_email;
END;
$$;


ALTER FUNCTION public.fn_customer_get_by_customer_email(p_email text) OWNER TO postgres;

--
-- TOC entry 293 (class 1255 OID 26022)
-- Name: fn_customer_get_by_customer_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_customer_get_by_customer_id(p_customer_id bigint) RETURNS SETOF public.customer
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM customer 
	WHERE customer_id = p_customer_id;
END;
$$;


ALTER FUNCTION public.fn_customer_get_by_customer_id(p_customer_id bigint) OWNER TO postgres;

--
-- TOC entry 204 (class 1259 OID 25416)
-- Name: ingredient_category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ingredient_category (
    ingredient_category_id bigint NOT NULL,
    category_name text,
    created_date timestamp(0) without time zone,
    updated_date timestamp(0) without time zone
);


ALTER TABLE public.ingredient_category OWNER TO postgres;

--
-- TOC entry 343 (class 1255 OID 26183)
-- Name: fn_ingredient_category_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_ingredient_category_get_all() RETURNS SETOF public.ingredient_category
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM ingredient_category;
END;
$$;


ALTER FUNCTION public.fn_ingredient_category_get_all() OWNER TO postgres;

--
-- TOC entry 282 (class 1255 OID 25971)
-- Name: fn_ingredient_category_get_by_category_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_ingredient_category_get_by_category_id(p_category_id bigint) RETURNS SETOF public.ingredient_category
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM ingredient_category 
	WHERE ingredient_category_id = p_category_id;
END;
$$;


ALTER FUNCTION public.fn_ingredient_category_get_by_category_id(p_category_id bigint) OWNER TO postgres;

--
-- TOC entry 342 (class 1255 OID 26182)
-- Name: fn_ingredient_detail_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_ingredient_detail_get_all() RETURNS TABLE(ingredient_id bigint, ingredient_name text, ingredient_category_id bigint, regional_province_id bigint, created_date timestamp without time zone, updated_date timestamp without time zone, regional_province_name text, category_name text)
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT i.ingredient_id, 
		   i.ingredient_name,
		   i.ingredient_category_id,
		   i.regional_province_id,
		   i.created_date,
		   i.updated_date,
		   r.regional_province_name,
		   cat.category_name
	FROM public.ingredient_detail i
	INNER JOIN public.regional_province r
	ON i.regional_province_id = r.regional_province_id
	INNER JOIN public.ingredient_category cat
	ON i.ingredient_category_id = cat.ingredient_category_id;
END;
$$;


ALTER FUNCTION public.fn_ingredient_detail_get_all() OWNER TO postgres;

--
-- TOC entry 346 (class 1255 OID 26194)
-- Name: fn_ingredient_detail_get_all_by_regional_province_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_ingredient_detail_get_all_by_regional_province_id(p_regional_province_id bigint) RETURNS TABLE(ingredient_id bigint, ingredient_name text, ingredient_category_id bigint, regional_province_id bigint, created_date timestamp without time zone, updated_date timestamp without time zone, regional_province_name text, category_name text)
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT i.ingredient_id, 
		   i.ingredient_name,
		   i.ingredient_category_id,
		   i.regional_province_id,
		   i.created_date,
		   i.updated_date,
		   r.regional_province_name,
		   cat.category_name
	FROM public.ingredient_detail i
	INNER JOIN public.regional_province r
	ON i.regional_province_id = r.regional_province_id
	INNER JOIN public.ingredient_category cat
	ON i.ingredient_category_id = cat.ingredient_category_id
	WHERE i.regional_province_id = p_regional_province_id;
END;
$$;


ALTER FUNCTION public.fn_ingredient_detail_get_all_by_regional_province_id(p_regional_province_id bigint) OWNER TO postgres;

--
-- TOC entry 210 (class 1259 OID 25497)
-- Name: ingredient_detail; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ingredient_detail (
    ingredient_id bigint NOT NULL,
    ingredient_name text,
    ingredient_category_id bigint,
    regional_province_id bigint NOT NULL,
    created_date timestamp(0) without time zone,
    updated_date timestamp(0) without time zone
);


ALTER TABLE public.ingredient_detail OWNER TO postgres;

--
-- TOC entry 300 (class 1255 OID 26054)
-- Name: fn_ingredient_detail_get_by_ingredient_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_ingredient_detail_get_by_ingredient_id(p_ingredient_id bigint) RETURNS SETOF public.ingredient_detail
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM ingredient_detail 
	WHERE ingredient_id = p_ingredient_id;
END;
$$;


ALTER FUNCTION public.fn_ingredient_detail_get_by_ingredient_id(p_ingredient_id bigint) OWNER TO postgres;

--
-- TOC entry 341 (class 1255 OID 26185)
-- Name: fn_ingredient_detail_table_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_ingredient_detail_table_get_all() RETURNS SETOF public.ingredient_detail
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM ingredient_detail;
END;
$$;


ALTER FUNCTION public.fn_ingredient_detail_table_get_all() OWNER TO postgres;

--
-- TOC entry 352 (class 1255 OID 26236)
-- Name: fn_order_ingredient_create(public.t_order[]); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_order_ingredient_create(t_dataarr public.t_order[]) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE 
 v_success int:= 0;
 v_T_Order T_Order;
 v_order_ingredient_id bigint;
 v_units_in_stock int;
 v_units_in_stock_baker int;
BEGIN
	INSERT INTO order_ingredient(required_date, order_date, shipped_date, ship_via )
	VALUES (CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'DHL') RETURNING id INTO v_order_ingredient_id;
	
    FOREACH v_T_Order IN ARRAY t_data
    LOOP
	    SELECT sg.units_in_stock INTO v_units_in_stock
		FROM public.supplier_goods sg 
		WHERE sg.supplier_goods_id = v_T_Order.p_supplier_goods_id;
		
		IF v_T_Order.p_units_in_stock <= v_units_in_stock THEN
				--supplier_goods update
		    	UPDATE supplier_goods sg
				SET sg.units_in_stock = (v_units_in_stock - v_T_Order.p_units_in_stock),
					sg.updated_date = CURRENT_TIMESTAMP
				WHERE sg.supplier_goods_id = v_T_Order.p_supplier_goods_id;
				
				--baker_goods update
				SELECT bg.units_in_stock INTO v_units_in_stock_baker
				FROM public.baker_goods bg 
				WHERE bg.ingredient_id = v_T_Order.p_ingredient_id;
				
				UPDATE baker_goods bg
				SET bg.units_in_stock = (v_units_in_stock_baker + v_T_Order.p_units_in_stock),
					bg.updated_date = CURRENT_TIMESTAMP
				WHERE bg.ingredient_id = v_T_Order.p_ingredient_id;
		
			    INSERT INTO order_ingredient_detail(order_ingredient_id, supplier_goods_id, quantity, created_date )
			    VALUES (v_order_ingredient_id, v_T_Order.p_supplier_goods_id, v_T_Order.p_units_in_stock, CURRENT_TIMESTAMP);
				COMMIT;
		END IF;
    END LOOP;
	return '1';
END;
$$;


ALTER FUNCTION public.fn_order_ingredient_create(t_dataarr public.t_order[]) OWNER TO postgres;

--
-- TOC entry 228 (class 1259 OID 25663)
-- Name: order_ingredient_detail; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.order_ingredient_detail (
    order_ingredient_detail_id bigint NOT NULL,
    order_ingredient_id bigint NOT NULL,
    supplier_goods_id bigint NOT NULL,
    quantity integer,
    total_price numeric(15,2),
    created_date timestamp(0) without time zone
);


ALTER TABLE public.order_ingredient_detail OWNER TO postgres;

--
-- TOC entry 318 (class 1255 OID 26075)
-- Name: fn_order_ingredient_detail_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_order_ingredient_detail_get_all() RETURNS SETOF public.order_ingredient_detail
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM order_ingredient_detail;
END;
$$;


ALTER FUNCTION public.fn_order_ingredient_detail_get_all() OWNER TO postgres;

--
-- TOC entry 226 (class 1259 OID 25643)
-- Name: order_ingredient; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.order_ingredient (
    order_ingredient_id bigint NOT NULL,
    order_date timestamp(0) without time zone,
    required_date timestamp(0) without time zone,
    shipped_date timestamp(0) without time zone,
    ship_via text
);


ALTER TABLE public.order_ingredient OWNER TO postgres;

--
-- TOC entry 327 (class 1255 OID 26092)
-- Name: fn_order_ingredient_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_order_ingredient_get_all() RETURNS SETOF public.order_ingredient
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM order_ingredient;
END;
$$;


ALTER FUNCTION public.fn_order_ingredient_get_all() OWNER TO postgres;

--
-- TOC entry 328 (class 1255 OID 26093)
-- Name: fn_order_ingredient_get_by_order_ingredient_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_order_ingredient_get_by_order_ingredient_id(p_order_ingredient_id bigint) RETURNS SETOF public.order_ingredient
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM order_ingredient 
	WHERE order_ingredient_id = p_order_ingredient_id;
END;
$$;


ALTER FUNCTION public.fn_order_ingredient_get_by_order_ingredient_id(p_order_ingredient_id bigint) OWNER TO postgres;

--
-- TOC entry 230 (class 1259 OID 25681)
-- Name: order_pizza_detail; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.order_pizza_detail (
    order_pizza_detail_id bigint NOT NULL,
    order_pizza_id bigint NOT NULL,
    baker_goods_id bigint NOT NULL,
    created_date timestamp(0) without time zone
);


ALTER TABLE public.order_pizza_detail OWNER TO postgres;

--
-- TOC entry 306 (class 1255 OID 26059)
-- Name: fn_order_pizza_detail_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_order_pizza_detail_get_all() RETURNS SETOF public.order_pizza_detail
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM order_pizza_detail;
END;
$$;


ALTER FUNCTION public.fn_order_pizza_detail_get_all() OWNER TO postgres;

--
-- TOC entry 307 (class 1255 OID 26060)
-- Name: fn_order_pizza_detail_get_by_detail_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_order_pizza_detail_get_by_detail_id(p_order_pizza_detail_id bigint) RETURNS SETOF public.order_pizza_detail
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM order_pizza_detail 
	WHERE order_pizza_detail_id = p_order_pizza_detail_id;
END;
$$;


ALTER FUNCTION public.fn_order_pizza_detail_get_by_detail_id(p_order_pizza_detail_id bigint) OWNER TO postgres;

--
-- TOC entry 357 (class 1255 OID 26263)
-- Name: fn_order_pizza_detail_get_by_order_pizza_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_order_pizza_detail_get_by_order_pizza_id(p_order_pizza_id bigint) RETURNS TABLE(order_pizza_detail_id bigint, order_pizza_id bigint, baker_goods_id bigint, created_date timestamp without time zone, ingredient_id bigint, ingredient_name text, regional_province_name text)
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT d.order_pizza_detail_id,
		   d.order_pizza_id,
		   d.baker_goods_id,
		   d.created_date,
		   i.ingredient_id,
		   i.ingredient_name,
		   r.regional_province_name
	FROM order_pizza_detail d
	INNER JOIN baker_goods b
	ON d.baker_goods_id = b.baker_goods_id
	INNER JOIN ingredient_detail i
	ON b.ingredient_id = i.ingredient_id
	INNER JOIN regional_province r
	ON i.regional_province_id = r.regional_province_id
	WHERE d.order_pizza_id = p_order_pizza_id;
END;
$$;


ALTER FUNCTION public.fn_order_pizza_detail_get_by_order_pizza_id(p_order_pizza_id bigint) OWNER TO postgres;

--
-- TOC entry 349 (class 1255 OID 26257)
-- Name: fn_order_pizza_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_order_pizza_get_all() RETURNS TABLE(order_pizza_id bigint, pizza_id bigint, customer_id bigint, quantity integer, discount integer, total_price numeric, order_date timestamp without time zone, required_date timestamp without time zone, shipped_date timestamp without time zone, ship_via text, canceled boolean, pizza_name text, size_in_inch integer, size_in_text text, total_slice integer, customer_name text, phone text, email text)
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT o.order_pizza_id,
		   o.pizza_id,
		   o.customer_id,
		   o.quantity,
		   o.discount,
		   o.total_price,
		   o.order_date,
		   o.required_date,
		   o.shipped_date,
		   o.ship_via,
		   o.canceled,
		   pi.pizza_name,
		   ps.size_in_inch,
		   ps.size_in_text,
		   ps.total_slice,
		   cus.customer_name,
		   cus.phone,
		   cus.email
	FROM public.order_pizza o
	INNER JOIN public.pizza pi 
	ON o.pizza_id = pi.pizza_id
	INNER JOIN public.pizza_size ps
	ON pi.pizza_size_id = ps.pizza_size_id
	INNER JOIN public.CUSTOMER cus
	ON o.customer_id = cus.customer_id;
END;
$$;


ALTER FUNCTION public.fn_order_pizza_get_all() OWNER TO postgres;

--
-- TOC entry 359 (class 1255 OID 26269)
-- Name: fn_order_pizza_get_all_by_customer_email(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_order_pizza_get_all_by_customer_email(p_email text) RETURNS TABLE(order_pizza_id bigint, pizza_id bigint, customer_id bigint, quantity integer, discount integer, total_price numeric, order_date timestamp without time zone, required_date timestamp without time zone, shipped_date timestamp without time zone, ship_via text, canceled boolean, pizza_name text, size_in_inch integer, size_in_text text, total_slice integer, customer_name text, phone text, email text)
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT o.order_pizza_id,
		   o.pizza_id,
		   o.customer_id,
		   o.quantity,
		   o.discount,
		   o.total_price,
		   o.order_date,
		   o.required_date,
		   o.shipped_date,
		   o.ship_via,
		   o.canceled,
		   pi.pizza_name,
		   ps.size_in_inch,
		   ps.size_in_text,
		   ps.total_slice,
		   cus.customer_name,
		   cus.phone,
		   cus.email
	FROM public.order_pizza o
	INNER JOIN public.pizza pi 
	ON o.pizza_id = pi.pizza_id
	INNER JOIN public.pizza_size ps
	ON pi.pizza_size_id = ps.pizza_size_id
	INNER JOIN public.CUSTOMER cus
	ON o.customer_id = cus.customer_id
	WHERE cus.email = p_email;
END;
$$;


ALTER FUNCTION public.fn_order_pizza_get_all_by_customer_email(p_email text) OWNER TO postgres;

--
-- TOC entry 224 (class 1259 OID 25611)
-- Name: order_pizza; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.order_pizza (
    order_pizza_id bigint NOT NULL,
    pizza_id bigint NOT NULL,
    customer_id bigint NOT NULL,
    quantity integer,
    discount integer,
    total_price numeric(15,2),
    order_date timestamp(0) without time zone,
    required_date timestamp(0) without time zone,
    shipped_date timestamp(0) without time zone,
    ship_via text,
    canceled boolean DEFAULT false
);


ALTER TABLE public.order_pizza OWNER TO postgres;

--
-- TOC entry 323 (class 1255 OID 26085)
-- Name: fn_order_pizza_get_by_order_pizza_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_order_pizza_get_by_order_pizza_id(p_order_pizza_id bigint) RETURNS SETOF public.order_pizza
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM order_pizza 
	WHERE order_pizza_id = p_order_pizza_id;
END;
$$;


ALTER FUNCTION public.fn_order_pizza_get_by_order_pizza_id(p_order_pizza_id bigint) OWNER TO postgres;

--
-- TOC entry 338 (class 1255 OID 26265)
-- Name: fn_pizza_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_pizza_get_all() RETURNS TABLE(pizza_id bigint, pizza_name text, pizza_size_id bigint, price numeric, in_stock bigint, created_date timestamp without time zone, updated_date timestamp without time zone, image_url text, description text, size_in_inch integer, size_in_text text, total_slice integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT pi.pizza_id,
		   pi.pizza_name,
		   pi.pizza_size_id,
		   pi.price,
		   pi.in_stock,
		   pi.created_date,
		   pi.updated_date,
		   pi.image_url,
		   pi.description,
		   pz.size_in_inch,
		   pz.size_in_text,
		   pz.total_slice
	FROM pizza pi
	INNER JOIN pizza_size pz
	ON pi.pizza_size_id = pz.pizza_size_id
	ORDER BY pi.pizza_id DESC;
END;
$$;


ALTER FUNCTION public.fn_pizza_get_all() OWNER TO postgres;

--
-- TOC entry 222 (class 1259 OID 25576)
-- Name: pizza; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pizza (
    pizza_id bigint NOT NULL,
    pizza_name text,
    pizza_size_id bigint NOT NULL,
    price numeric(15,2),
    in_stock bigint,
    created_date timestamp(0) without time zone,
    updated_date timestamp(0) without time zone,
    image_url text,
    description text
);


ALTER TABLE public.pizza OWNER TO postgres;

--
-- TOC entry 297 (class 1255 OID 26028)
-- Name: fn_pizza_get_by_pizza_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_pizza_get_by_pizza_id(p_pizza_id bigint) RETURNS SETOF public.pizza
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM pizza 
	WHERE pizza_id = p_pizza_id;
END;
$$;


ALTER FUNCTION public.fn_pizza_get_by_pizza_id(p_pizza_id bigint) OWNER TO postgres;

--
-- TOC entry 220 (class 1259 OID 25566)
-- Name: pizza_size; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pizza_size (
    pizza_size_id bigint NOT NULL,
    size_in_inch integer,
    size_in_text text,
    total_slice integer,
    created_date timestamp(0) without time zone,
    updated_date timestamp(0) without time zone
);


ALTER TABLE public.pizza_size OWNER TO postgres;

--
-- TOC entry 263 (class 1255 OID 25984)
-- Name: fn_pizza_size_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_pizza_size_get_all() RETURNS SETOF public.pizza_size
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM pizza_size;
END;
$$;


ALTER FUNCTION public.fn_pizza_size_get_all() OWNER TO postgres;

--
-- TOC entry 264 (class 1255 OID 25985)
-- Name: fn_pizza_size_get_by_category_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_pizza_size_get_by_category_id(p_pizza_size_id bigint) RETURNS SETOF public.pizza_size
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM pizza_size 
	WHERE pizza_size_id = p_pizza_size_id;
END;
$$;


ALTER FUNCTION public.fn_pizza_size_get_by_category_id(p_pizza_size_id bigint) OWNER TO postgres;

--
-- TOC entry 208 (class 1259 OID 25446)
-- Name: regional_province; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.regional_province (
    regional_province_id bigint NOT NULL,
    regional_province_name text,
    created_date timestamp(0) without time zone,
    updated_date timestamp(0) without time zone
);


ALTER TABLE public.regional_province OWNER TO postgres;

--
-- TOC entry 284 (class 1255 OID 25977)
-- Name: fn_regional_province_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_regional_province_get_all() RETURNS SETOF public.regional_province
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM regional_province;
END;
$$;


ALTER FUNCTION public.fn_regional_province_get_all() OWNER TO postgres;

--
-- TOC entry 285 (class 1255 OID 25978)
-- Name: fn_regional_province_get_by_category_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_regional_province_get_by_category_id(p_province_id bigint) RETURNS SETOF public.regional_province
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM regional_province 
	WHERE regional_province_id = p_province_id;
END;
$$;


ALTER FUNCTION public.fn_regional_province_get_by_category_id(p_province_id bigint) OWNER TO postgres;

--
-- TOC entry 339 (class 1255 OID 26144)
-- Name: fn_sign_in_check(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_sign_in_check(p_email text, p_pass text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
--DECLARE _user_id bigint:= 0; 
BEGIN
	--RETURN QUERY
	IF EXISTS(SELECT 1
			 FROM customer cus
			 WHERE cus.email = p_email AND cus.pass = p_pass) THEN
			 	RETURN(
					SELECT cus.role_id
				 	FROM customer cus
				 	WHERE cus.email = p_email AND cus.pass = p_pass
				);
    ELSEIF EXISTS(SELECT 1
				  FROM baker b
				  WHERE b.email = p_email AND b.pass = p_pass) THEN
				  	RETURN(
						SELECT b.role_id
					  	FROM baker b
					  	WHERE b.email = p_email AND b.pass = p_pass
					);
    ELSE
		RETURN '0';
    END IF;
END;
$$;


ALTER FUNCTION public.fn_sign_in_check(p_email text, p_pass text) OWNER TO postgres;

--
-- TOC entry 206 (class 1259 OID 25436)
-- Name: supplier; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.supplier (
    supplier_id bigint NOT NULL,
    supplier_name text,
    address text,
    city text,
    postal_code bigint,
    phone text,
    email text,
    created_date timestamp(0) without time zone,
    updated_date timestamp(0) without time zone,
    hidden boolean DEFAULT false
);


ALTER TABLE public.supplier OWNER TO postgres;

--
-- TOC entry 295 (class 1255 OID 26006)
-- Name: fn_supplier_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_supplier_get_all() RETURNS SETOF public.supplier
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM supplier;
	--WHERE hidden = false;
END;
$$;


ALTER FUNCTION public.fn_supplier_get_all() OWNER TO postgres;

--
-- TOC entry 292 (class 1255 OID 26021)
-- Name: fn_supplier_get_by_supplier_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_supplier_get_by_supplier_id(p_supplier_id bigint) RETURNS SETOF public.supplier
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM supplier 
	WHERE supplier_id = p_supplier_id;
END;
$$;


ALTER FUNCTION public.fn_supplier_get_by_supplier_id(p_supplier_id bigint) OWNER TO postgres;

--
-- TOC entry 351 (class 1255 OID 34463)
-- Name: fn_supplier_goods_for_baker_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_supplier_goods_for_baker_get_all() RETURNS TABLE(supplier_goods_id bigint, supplier_id bigint, ingredient_id bigint, quantity_per_unit integer, unit_price numeric, units_in_stock integer, hidden boolean, created_date timestamp without time zone, updated_date timestamp without time zone, supplier_name text, ingredient_name text, ingredient_category_id bigint, regional_province_id bigint, regional_province_name text, category_name text)
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT sg.supplier_goods_id,
		   sg.supplier_id,
		   sg.ingredient_id,
		   sg.quantity_per_unit,
		   sg.unit_price,
		   sg.units_in_stock,
		   sg.hidden,
		   sg.created_date,
		   sg.updated_date,
		   sup.supplier_name,
		   i.ingredient_name,
		   i.ingredient_category_id,
		   i.regional_province_id,
		   r.regional_province_name,
		   cat.category_name
	FROM public.supplier_goods sg
	INNER JOIN public.supplier sup
	ON sg.supplier_id = sup.supplier_id
	INNER JOIN public.ingredient_detail i
	ON sg.ingredient_id = i.ingredient_id
	INNER JOIN public.regional_province r
	ON i.regional_province_id = r.regional_province_id
	INNER JOIN public.ingredient_category cat
	ON i.ingredient_category_id = cat.ingredient_category_id
	WHERE sup.hidden = false;
END;
$$;


ALTER FUNCTION public.fn_supplier_goods_for_baker_get_all() OWNER TO postgres;

--
-- TOC entry 340 (class 1255 OID 26184)
-- Name: fn_supplier_goods_get_all(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_supplier_goods_get_all() RETURNS TABLE(supplier_goods_id bigint, supplier_id bigint, ingredient_id bigint, quantity_per_unit integer, unit_price numeric, units_in_stock integer, hidden boolean, created_date timestamp without time zone, updated_date timestamp without time zone, supplier_name text, ingredient_name text, ingredient_category_id bigint, regional_province_id bigint, regional_province_name text, category_name text)
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT sg.supplier_goods_id,
		   sg.supplier_id,
		   sg.ingredient_id,
		   sg.quantity_per_unit,
		   sg.unit_price,
		   sg.units_in_stock,
		   sg.hidden,
		   sg.created_date,
		   sg.updated_date,
		   sup.supplier_name,
		   i.ingredient_name,
		   i.ingredient_category_id,
		   i.regional_province_id,
		   r.regional_province_name,
		   cat.category_name
	FROM public.supplier_goods sg
	INNER JOIN public.supplier sup
	ON sg.supplier_id = sup.supplier_id
	INNER JOIN public.ingredient_detail i
	ON sg.ingredient_id = i.ingredient_id
	INNER JOIN public.regional_province r
	ON i.regional_province_id = r.regional_province_id
	INNER JOIN public.ingredient_category cat
	ON i.ingredient_category_id = cat.ingredient_category_id;
END;
$$;


ALTER FUNCTION public.fn_supplier_goods_get_all() OWNER TO postgres;

--
-- TOC entry 212 (class 1259 OID 25517)
-- Name: supplier_goods; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.supplier_goods (
    supplier_goods_id bigint NOT NULL,
    supplier_id bigint NOT NULL,
    ingredient_id bigint,
    quantity_per_unit integer,
    unit_price numeric(15,2),
    units_in_stock integer,
    created_date timestamp(0) without time zone,
    updated_date timestamp(0) without time zone,
    hidden boolean DEFAULT false
);


ALTER TABLE public.supplier_goods OWNER TO postgres;

--
-- TOC entry 311 (class 1255 OID 26068)
-- Name: fn_supplier_goods_get_by_supplier_goods_id(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fn_supplier_goods_get_by_supplier_goods_id(p_supplier_goods_id bigint) RETURNS SETOF public.supplier_goods
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN QUERY
	SELECT *	
	FROM supplier_goods 
	WHERE supplier_goods_id = p_supplier_goods_id;
END;
$$;


ALTER FUNCTION public.fn_supplier_goods_get_by_supplier_goods_id(p_supplier_goods_id bigint) OWNER TO postgres;

--
-- TOC entry 348 (class 1255 OID 26230)
-- Name: foo_a(public.t_data[]); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.foo_a(t_data public.t_data[]) RETURNS void
    LANGUAGE plpgsql
    AS $$

--   insert into t(x, y)
--   select d.x, d.y
--   from unnest(t_data) as d;
--   return;
DECLARE
   item t_data;
begin
   FOREACH item IN ARRAY t_data
   LOOP
      INSERT INTO t(x,y) values (item.x, item.y);
   END LOOP;
end $$;


ALTER FUNCTION public.foo_a(t_data public.t_data[]) OWNER TO postgres;

--
-- TOC entry 333 (class 1255 OID 26134)
-- Name: sp_baker_create(text, text, text, text, text, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_baker_create(p_name text, p_address text, p_phone text, p_email text, p_password text, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO public.baker(baker_name, address, phone, email, pass, role_id, created_date)
	VALUES (p_name, p_address, p_phone, p_email, p_password, '1', CURRENT_TIMESTAMP);
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_baker_create(p_name text, p_address text, p_phone text, p_email text, p_password text, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 278 (class 1255 OID 25961)
-- Name: sp_baker_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_baker_delete(p_baker_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM baker 
	WHERE baker_id = p_baker_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_baker_delete(p_baker_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 344 (class 1255 OID 26195)
-- Name: sp_baker_goods_create(bigint, integer, numeric, integer, boolean, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_baker_goods_create(p_ingredient_id bigint, p_quantity_per_unit integer, p_unit_price numeric, p_units_in_stock integer, p_hidden boolean, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO baker_goods(ingredient_id, quantity_per_unit, unit_price, units_in_stock, hidden, created_date)
	VALUES (p_ingredient_id, p_quantity_per_unit, p_unit_price, p_units_in_stock, p_hidden, CURRENT_TIMESTAMP);
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_baker_goods_create(p_ingredient_id bigint, p_quantity_per_unit integer, p_unit_price numeric, p_units_in_stock integer, p_hidden boolean, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 329 (class 1255 OID 34461)
-- Name: sp_baker_goods_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_baker_goods_delete(p_baker_goods_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM baker_goods 
	WHERE baker_goods_id = p_baker_goods_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_baker_goods_delete(p_baker_goods_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 347 (class 1255 OID 26196)
-- Name: sp_baker_goods_update(bigint, bigint, integer, numeric, integer, boolean, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_baker_goods_update(p_baker_goods_id bigint, p_ingredient_id bigint, p_quantity_per_unit integer, p_unit_price numeric, p_units_in_stock integer, p_hidden boolean, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE baker_goods
	SET ingredient_id = p_ingredient_id, 
		quantity_per_unit = p_quantity_per_unit, 
		unit_price = p_unit_price,
		units_in_stock = p_units_in_stock,
		hidden = p_hidden,
		updated_date = CURRENT_TIMESTAMP
	WHERE baker_goods_id = p_baker_goods_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_baker_goods_update(p_baker_goods_id bigint, p_ingredient_id bigint, p_quantity_per_unit integer, p_unit_price numeric, p_units_in_stock integer, p_hidden boolean, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 334 (class 1255 OID 26135)
-- Name: sp_baker_update(bigint, text, text, text, text, text, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_baker_update(p_baker_id bigint, p_name text, p_address text, p_phone text, p_email text, p_password text, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE public.baker
	SET baker_name = p_name, 
		address = p_address, 
		phone = p_phone, 
		email = p_email, 
		pass = p_password,
		updated_date = CURRENT_TIMESTAMP
	WHERE baker_id = p_baker_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_baker_update(p_baker_id bigint, p_name text, p_address text, p_phone text, p_email text, p_password text, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 332 (class 1255 OID 26114)
-- Name: sp_customer_create(text, text, text, text, text, text, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_customer_create(p_customer_name text, p_address text, p_phone text, p_email text, p_shipping_info text, p_password text, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO customer(customer_name, address, phone, email, shipping_info, pass, role_id, created_date)
	VALUES (p_customer_name, p_address, p_phone, p_email, p_shipping_info, p_password, '2', CURRENT_TIMESTAMP);
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_customer_create(p_customer_name text, p_address text, p_phone text, p_email text, p_shipping_info text, p_password text, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 291 (class 1255 OID 26017)
-- Name: sp_customer_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_customer_delete(p_customer_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM customer 
	WHERE customer_id = p_customer_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_customer_delete(p_customer_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 330 (class 1255 OID 26016)
-- Name: sp_customer_update(bigint, text, text, text, text, text, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_customer_update(p_customer_id bigint, p_customer_name text, p_address text, p_phone text, p_email text, p_shipping_info text, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE customer
	SET customer_name = p_customer_name, 
		address = p_address,
		phone = p_phone,
		email = p_email,
		shipping_info = p_shipping_info,
		password = p_password,
		updated_date = CURRENT_TIMESTAMP
	WHERE customer_id = p_customer_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_customer_update(p_customer_id bigint, p_customer_name text, p_address text, p_phone text, p_email text, p_shipping_info text, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 280 (class 1255 OID 25972)
-- Name: sp_ingredient_category_create(text, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_ingredient_category_create(p_category_name text, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO ingredient_category(category_name, created_date)
	VALUES (p_category_name, CURRENT_TIMESTAMP);
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_ingredient_category_create(p_category_name text, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 279 (class 1255 OID 25969)
-- Name: sp_ingredient_category_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_ingredient_category_delete(p_category_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM ingredient_category 
	WHERE ingredient_category_id = p_category_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_ingredient_category_delete(p_category_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 281 (class 1255 OID 25973)
-- Name: sp_ingredient_category_update(bigint, text, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_ingredient_category_update(p_category_id bigint, p_category_name text, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE ingredient_category
	SET category_name = p_category_name, 
		updated_date = CURRENT_TIMESTAMP
	WHERE ingredient_category_id = p_category_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_ingredient_category_update(p_category_id bigint, p_category_name text, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 298 (class 1255 OID 26050)
-- Name: sp_ingredient_detail_create(text, bigint, bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_ingredient_detail_create(p_ingredient_name text, p_ingredient_category_id bigint, p_regional_province_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO ingredient_detail(ingredient_name, ingredient_category_id, regional_province_id, created_date)
	VALUES (p_ingredient_name, p_ingredient_category_id, p_regional_province_id, CURRENT_TIMESTAMP);
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_ingredient_detail_create(p_ingredient_name text, p_ingredient_category_id bigint, p_regional_province_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 299 (class 1255 OID 26052)
-- Name: sp_ingredient_detail_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_ingredient_detail_delete(p_ingredient_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM ingredient_detail 
	WHERE ingredient_id = p_ingredient_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_ingredient_detail_delete(p_ingredient_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 302 (class 1255 OID 26056)
-- Name: sp_ingredient_detail_update(bigint, bigint, bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_ingredient_detail_update(p_order_pizza_detail_id bigint, p_order_pizza_id bigint, p_baker_goods_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE order_pizza_detail
	SET order_pizza_id = p_order_pizza_id, 
		baker_goods_id = p_baker_goods_id,
		updated_date = CURRENT_TIMESTAMP
	WHERE order_pizza_detail_id = p_order_pizza_detail_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_ingredient_detail_update(p_order_pizza_detail_id bigint, p_order_pizza_id bigint, p_baker_goods_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 303 (class 1255 OID 26051)
-- Name: sp_ingredient_detail_update(bigint, text, bigint, bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_ingredient_detail_update(p_ingredient_id bigint, p_ingredient_name text, p_ingredient_category_id bigint, p_regional_province_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE ingredient_detail
	SET ingredient_name = p_ingredient_name, 
		ingredient_category_id = p_ingredient_category_id,
		regional_province_id = p_regional_province_id,
		updated_date = CURRENT_TIMESTAMP
	WHERE ingredient_id = p_ingredient_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_ingredient_detail_update(p_ingredient_id bigint, p_ingredient_name text, p_ingredient_category_id bigint, p_regional_province_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 354 (class 1255 OID 26242)
-- Name: sp_order_ingredient_create(integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_ingredient_create(INOUT p_order_ingredient_id integer)
    LANGUAGE plpgsql
    AS $$

DECLARE
v_order_ingredient_id bigint; 
BEGIN
	INSERT INTO order_ingredient(order_date, required_date, shipped_date, ship_via)
	VALUES (CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'DHL' ) RETURNING order_ingredient_id INTO v_order_ingredient_id;
	p_order_ingredient_id = v_order_ingredient_id;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_order_ingredient_create(INOUT p_order_ingredient_id integer) OWNER TO postgres;

--
-- TOC entry 326 (class 1255 OID 26091)
-- Name: sp_order_ingredient_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_ingredient_delete(p_order_ingredient_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM order_ingredient 
	WHERE order_ingredient_id = p_order_ingredient_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_order_ingredient_delete(p_order_ingredient_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 314 (class 1255 OID 26071)
-- Name: sp_order_ingredient_detail_create(bigint, bigint, integer, numeric, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_ingredient_detail_create(p_order_ingredient_id bigint, p_supplier_goods_id bigint, p_quantity integer, p_total_price numeric, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO order_ingredient_detail(p_order_ingredient_id, p_supplier_goods_id, p_quantity, p_total_price, created_date)
	VALUES (p_order_ingredient_id, p_supplier_goods_id, p_quantity, p_total_price, CURRENT_TIMESTAMP);
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_order_ingredient_detail_create(p_order_ingredient_id bigint, p_supplier_goods_id bigint, p_quantity integer, p_total_price numeric, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 353 (class 1255 OID 26243)
-- Name: sp_order_ingredient_detail_create_by_ordered_id(bigint, bigint, bigint, integer, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_ingredient_detail_create_by_ordered_id(p_order_ingredient_id bigint, p_supplier_goods_id bigint, p_ingredient_id bigint, p_units_in_stock integer, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$

DECLARE 
 v_order_ingredient_id bigint;
 v_units_in_stock int;
 v_units_in_stock_baker int;
 v_unit_price numeric(15,2);
BEGIN
	SELECT units_in_stock, unit_price INTO v_units_in_stock, v_unit_price
	FROM public.supplier_goods 
	WHERE supplier_goods_id = p_supplier_goods_id;
		
		IF p_units_in_stock <= v_units_in_stock THEN
				--supplier_goods update
		    	UPDATE supplier_goods
				SET units_in_stock = (v_units_in_stock - p_units_in_stock),
					updated_date = CURRENT_TIMESTAMP
				WHERE supplier_goods_id = p_supplier_goods_id;
				
				--baker_goods update
				IF EXISTS(SELECT 1
			    		  FROM baker_goods
			 			  WHERE ingredient_id = p_ingredient_id) THEN
								SELECT units_in_stock INTO v_units_in_stock_baker
								FROM public.baker_goods 
								WHERE ingredient_id = p_ingredient_id;
								
								UPDATE baker_goods
								SET units_in_stock = (v_units_in_stock_baker + p_units_in_stock),
								    updated_date = CURRENT_TIMESTAMP
								WHERE ingredient_id = p_ingredient_id;
    			ELSE
								INSERT INTO baker_goods(ingredient_id, quantity_per_unit, unit_price, units_in_stock, created_date, hidden)
			   				    VALUES (p_ingredient_id, 0, 0, p_units_in_stock,  CURRENT_TIMESTAMP, true);
    			END IF;
		
				--order table update
			    INSERT INTO order_ingredient_detail(order_ingredient_id, supplier_goods_id, quantity, total_price, created_date )
			    VALUES (p_order_ingredient_id, p_supplier_goods_id, p_units_in_stock, p_units_in_stock * v_unit_price, CURRENT_TIMESTAMP);
				p_success = 1;
				COMMIT;
		END IF;
END;
$$;


ALTER PROCEDURE public.sp_order_ingredient_detail_create_by_ordered_id(p_order_ingredient_id bigint, p_supplier_goods_id bigint, p_ingredient_id bigint, p_units_in_stock integer, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 316 (class 1255 OID 26073)
-- Name: sp_order_ingredient_detail_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_ingredient_detail_delete(p_order_ingredient_detail_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM order_ingredient_detail 
	WHERE order_ingredient_detail_id = p_order_ingredient_detail_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_order_ingredient_detail_delete(p_order_ingredient_detail_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 317 (class 1255 OID 26074)
-- Name: sp_order_ingredient_detail_delete_by_order_ingredient_id(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_ingredient_detail_delete_by_order_ingredient_id(p_order_ingredient_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM order_ingredient_detail 
	WHERE order_ingredient_id = p_order_ingredient_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_order_ingredient_detail_delete_by_order_ingredient_id(p_order_ingredient_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 315 (class 1255 OID 26072)
-- Name: sp_order_ingredient_detail_update(bigint, bigint, bigint, integer, numeric, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_ingredient_detail_update(p_order_ingredient_detail_id bigint, p_order_ingredient_id bigint, p_supplier_goods_id bigint, p_quantity integer, p_total_price numeric, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE order_ingredient_detail
	SET order_ingredient_id = p_order_ingredient_id, 
		supplier_goods_id = p_supplier_goods_id,
		quantity = p_quantity, 
		total_price = p_total_price,
		updated_date = CURRENT_TIMESTAMP
	WHERE order_ingredient_detail_id = p_order_ingredient_detail_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_order_ingredient_detail_update(p_order_ingredient_detail_id bigint, p_order_ingredient_id bigint, p_supplier_goods_id bigint, p_quantity integer, p_total_price numeric, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 325 (class 1255 OID 26090)
-- Name: sp_order_ingredient_update(bigint, bigint, bigint, timestamp without time zone, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_ingredient_update(p_order_ingredient_id bigint, p_baker_id bigint, p_supplier_id bigint, p_required_date timestamp without time zone, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE order_ingredient
	SET baker_id = p_baker_id, 
		supplier_id = p_supplier_id, 
		required_date = p_required_date,
		order_date = CURRENT_TIMESTAMP
	WHERE order_ingredient_id = p_order_ingredient_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_order_ingredient_update(p_order_ingredient_id bigint, p_baker_id bigint, p_supplier_id bigint, p_required_date timestamp without time zone, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 356 (class 1255 OID 26258)
-- Name: sp_order_pizza_cancel(bigint, boolean, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_pizza_cancel(p_order_pizza_id bigint, p_canceled boolean, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE order_pizza
	SET canceled = p_canceled
	WHERE order_pizza_id = p_order_pizza_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_order_pizza_cancel(p_order_pizza_id bigint, p_canceled boolean, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 335 (class 1255 OID 26248)
-- Name: sp_order_pizza_create(bigint, integer, integer, numeric, text, bigint); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_pizza_create(p_pizza_id bigint, p_quantity integer, p_discount integer, p_total_price numeric, p_email text, INOUT p_order_pizza_id bigint)
    LANGUAGE plpgsql
    AS $$
DECLARE
v_customer_id bigint;
v_in_stock bigint;
v_order_pizza_id bigint;
BEGIN
    SELECT customer_id INTO v_customer_id FROM customer WHERE email = p_email;
	
	INSERT INTO order_pizza(pizza_id, customer_id, quantity, discount, total_price, order_date, required_date, shipped_date, ship_via)
	VALUES (p_pizza_id, v_customer_id, p_quantity, p_discount, p_total_price, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'DHL') RETURNING order_pizza_id INTO v_order_pizza_id;
	
	SELECT in_stock INTO v_in_stock FROM pizza WHERE pizza_id = p_pizza_id;
	
	UPDATE pizza
	SET in_stock = v_in_stock - p_quantity
	WHERE pizza_id = p_pizza_id;
	
	p_order_pizza_id = v_order_pizza_id;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_order_pizza_create(p_pizza_id bigint, p_quantity integer, p_discount integer, p_total_price numeric, p_email text, INOUT p_order_pizza_id bigint) OWNER TO postgres;

--
-- TOC entry 322 (class 1255 OID 26083)
-- Name: sp_order_pizza_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_pizza_delete(p_order_pizza_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM order_pizza 
	WHERE order_pizza_id = p_order_pizza_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_order_pizza_delete(p_order_pizza_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 301 (class 1255 OID 26055)
-- Name: sp_order_pizza_detail_create(bigint, bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_pizza_detail_create(p_order_pizza_id bigint, p_baker_goods_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO order_pizza_detail(p_order_pizza_id, p_baker_goods_id, created_date)
	VALUES (order_pizza_id, baker_goods_id, CURRENT_TIMESTAMP);
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_order_pizza_detail_create(p_order_pizza_id bigint, p_baker_goods_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 355 (class 1255 OID 26253)
-- Name: sp_order_pizza_detail_create_by_ordered_id(bigint, bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_pizza_detail_create_by_ordered_id(p_order_pizza_id bigint, p_baker_goods_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$

DECLARE
v_units_in_stock int;

BEGIN
	INSERT INTO order_pizza_detail(order_pizza_id, baker_goods_id, created_date)
	VALUES (p_order_pizza_id, p_baker_goods_id, CURRENT_TIMESTAMP);
	
	SELECT units_in_stock INTO v_units_in_stock FROM baker_goods WHERE baker_goods_id = p_baker_goods_id;
	UPDATE baker_goods
	SET units_in_stock = v_units_in_stock - 1,
	    updated_date = CURRENT_TIMESTAMP
	WHERE baker_goods_id = p_baker_goods_id;
	
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_order_pizza_detail_create_by_ordered_id(p_order_pizza_id bigint, p_baker_goods_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 305 (class 1255 OID 26058)
-- Name: sp_order_pizza_detail_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_pizza_detail_delete(p_order_pizza_detail_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM order_pizza_detail 
	WHERE order_pizza_detail_id = p_order_pizza_detail_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_order_pizza_detail_delete(p_order_pizza_detail_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 308 (class 1255 OID 26062)
-- Name: sp_order_pizza_detail_delete_by_order_pizza_id(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_pizza_detail_delete_by_order_pizza_id(p_order_pizza_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM order_pizza_detail 
	WHERE order_pizza_id = p_order_pizza_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_order_pizza_detail_delete_by_order_pizza_id(p_order_pizza_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 304 (class 1255 OID 26057)
-- Name: sp_order_pizza_detail_update(bigint, bigint, bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_pizza_detail_update(p_order_pizza_detail_id bigint, p_order_pizza_id bigint, p_baker_goods_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE order_pizza_detail
	SET order_pizza_id = p_order_pizza_id, 
		baker_goods_id = p_baker_goods_id,
		updated_date = CURRENT_TIMESTAMP
	WHERE order_pizza_detail_id = p_order_pizza_detail_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_order_pizza_detail_update(p_order_pizza_detail_id bigint, p_order_pizza_id bigint, p_baker_goods_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 324 (class 1255 OID 26087)
-- Name: sp_order_pizza_update(bigint, bigint, bigint, integer, integer, numeric, timestamp without time zone, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_pizza_update(p_order_pizza_id bigint, p_pizza_id bigint, p_customer_id bigint, p_quantity integer, p_discount integer, p_total_price numeric, p_required_date timestamp without time zone, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE order_pizza
	SET pizza_id = p_pizza_id, 
		customer_id = p_customer_id, 
		quantity = p_quantity,
		discount = p_discount,
		total_price = p_total_price,
		required_date = p_required_date,
		order_date = CURRENT_TIMESTAMP
	WHERE order_pizza_id = p_order_pizza_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_order_pizza_update(p_order_pizza_id bigint, p_pizza_id bigint, p_customer_id bigint, p_quantity integer, p_discount integer, p_total_price numeric, p_required_date timestamp without time zone, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 321 (class 1255 OID 26082)
-- Name: sp_order_pizza_update(bigint, bigint, bigint, bigint[], integer, integer, numeric, timestamp without time zone, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_order_pizza_update(p_order_pizza_id bigint, p_pizza_id bigint, p_customer_id bigint, p_ingredient_list bigint[], p_quantity integer, p_discount integer, p_total_price numeric, p_required_date timestamp without time zone, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE order_pizza
	SET pizza_id = p_pizza_id, 
		customer_id = p_customer_id, 
		ingredient_list = p_ingredient_list,
		quantity = p_quantity,
		discount = p_discount,
		total_price = p_total_price,
		required_date = p_required_date,
		order_date = CURRENT_TIMESTAMP
	WHERE order_pizza_id = p_order_pizza_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_order_pizza_update(p_order_pizza_id bigint, p_pizza_id bigint, p_customer_id bigint, p_ingredient_list bigint[], p_quantity integer, p_discount integer, p_total_price numeric, p_required_date timestamp without time zone, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 337 (class 1255 OID 34462)
-- Name: sp_pizza_create(text, bigint, numeric, bigint, text, text, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_pizza_create(p_pizza_name text, p_pizza_size_id bigint, p_price numeric, p_in_stock bigint, p_image_url text, p_description text, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO pizza(pizza_name, pizza_size_id, price, in_stock, image_url, description, created_date)
	VALUES (p_pizza_name, p_pizza_size_id, p_price, p_in_stock, p_image_url, p_description, CURRENT_TIMESTAMP);
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_pizza_create(p_pizza_name text, p_pizza_size_id bigint, p_price numeric, p_in_stock bigint, p_image_url text, p_description text, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 294 (class 1255 OID 26026)
-- Name: sp_pizza_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_pizza_delete(p_pizza_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM pizza 
	WHERE pizza_id = p_pizza_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_pizza_delete(p_pizza_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 288 (class 1255 OID 25986)
-- Name: sp_pizza_size_create(integer, text, integer, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_pizza_size_create(p_size_in_inch integer, p_size_in_text text, p_total_slice integer, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO pizza_size(size_in_inch, size_in_text, total_slice, created_date)
	VALUES (p_size_in_inch, p_size_in_text, p_total_slice, CURRENT_TIMESTAMP);
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_pizza_size_create(p_size_in_inch integer, p_size_in_text text, p_total_slice integer, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 262 (class 1255 OID 25983)
-- Name: sp_pizza_size_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_pizza_size_delete(p_pizza_size_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM pizza_size 
	WHERE pizza_size_id = p_pizza_size_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_pizza_size_delete(p_pizza_size_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 260 (class 1255 OID 25982)
-- Name: sp_pizza_size_update(bigint, integer, text, integer, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_pizza_size_update(p_pizza_size_id bigint, p_size_in_inch integer, p_size_in_text text, p_total_slice integer, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE pizza_size
	SET size_in_inch = p_size_in_inch, 
		size_in_text = p_size_in_text,
		total_slice = p_total_slice,
		updated_date = CURRENT_TIMESTAMP
	WHERE pizza_size_id = p_pizza_size_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_pizza_size_update(p_pizza_size_id bigint, p_size_in_inch integer, p_size_in_text text, p_total_slice integer, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 336 (class 1255 OID 26267)
-- Name: sp_pizza_update(bigint, text, bigint, numeric, bigint, text, text, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_pizza_update(p_pizza_id bigint, p_pizza_name text, p_pizza_size_id bigint, p_price numeric, p_in_stock bigint, p_image_url text, p_description text, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE pizza
	SET pizza_name = p_pizza_name, 
		pizza_size_id = p_pizza_size_id,
		price = p_price,
		in_stock = p_in_stock,
		image_url = p_image_url,
		description = p_description,
		updated_date = CURRENT_TIMESTAMP
	WHERE pizza_id = p_pizza_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_pizza_update(p_pizza_id bigint, p_pizza_name text, p_pizza_size_id bigint, p_price numeric, p_in_stock bigint, p_image_url text, p_description text, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 286 (class 1255 OID 25980)
-- Name: sp_regional_province_create(text, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_regional_province_create(p_province_name text, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO regional_province(regional_province_name, created_date)
	VALUES (p_province_name, CURRENT_TIMESTAMP);
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_regional_province_create(p_province_name text, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 283 (class 1255 OID 25976)
-- Name: sp_regional_province_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_regional_province_delete(p_province_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM regional_province 
	WHERE regional_province_id = p_province_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_regional_province_delete(p_province_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 277 (class 1255 OID 25975)
-- Name: sp_regional_province_update(bigint, text, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_regional_province_update(p_province_id bigint, p_province_name text, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE regional_province
	SET regional_province_name = p_province_name, 
		updated_date = CURRENT_TIMESTAMP
	WHERE regional_province_id = p_province_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_regional_province_update(p_province_id bigint, p_province_name text, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 289 (class 1255 OID 26011)
-- Name: sp_supplier_create(text, text, text, bigint, text, text, boolean, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_supplier_create(p_supplier_name text, p_address text, p_city text, p_postal_code bigint, p_phone text, p_email text, p_hidden boolean, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO supplier(supplier_name, address, city, postal_code, phone, email, hidden, created_date)
	VALUES (p_supplier_name, p_address, p_city, p_postal_code, p_phone, p_email, p_hidden, CURRENT_TIMESTAMP);
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_supplier_create(p_supplier_name text, p_address text, p_city text, p_postal_code bigint, p_phone text, p_email text, p_hidden boolean, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 296 (class 1255 OID 26005)
-- Name: sp_supplier_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_supplier_delete(p_supplier_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM supplier 
	WHERE supplier_id = p_supplier_id;
	p_success = 1;
	COMMIT;
end; 
$$;


ALTER PROCEDURE public.sp_supplier_delete(p_supplier_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 312 (class 1255 OID 26069)
-- Name: sp_supplier_goods_create(bigint, bigint, integer, numeric, integer, boolean, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_supplier_goods_create(p_supplier_id bigint, p_ingredient_id bigint, p_quantity_per_unit integer, p_unit_price numeric, p_units_in_stock integer, p_hidden boolean, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO supplier_goods(supplier_id, ingredient_id, quantity_per_unit, unit_price, units_in_stock, hidden, created_date)
	VALUES (p_supplier_id, p_ingredient_id, p_quantity_per_unit, p_unit_price, p_units_in_stock, p_hidden, CURRENT_TIMESTAMP);
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_supplier_goods_create(p_supplier_id bigint, p_ingredient_id bigint, p_quantity_per_unit integer, p_unit_price numeric, p_units_in_stock integer, p_hidden boolean, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 309 (class 1255 OID 26064)
-- Name: sp_supplier_goods_create(bigint, bigint, bigint, integer, numeric, integer, boolean, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_supplier_goods_create(p_supplier_id bigint, p_ingredient_id bigint, p_regional_province_id bigint, p_quantity_per_unit integer, p_unit_price numeric, p_units_in_stock integer, p_hidden boolean, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO supplier_goods(supplier_id, ingredient_id, regional_province_id, quantity_per_unit, unit_price, units_in_stock, hidden, created_date)
	VALUES (p_supplier_id, p_ingredient_id, p_regional_province_id, p_quantity_per_unit, p_unit_price, p_units_in_stock, p_hidden, CURRENT_TIMESTAMP);
	p_success = 1;
    COMMIT;
END;
$$;


ALTER PROCEDURE public.sp_supplier_goods_create(p_supplier_id bigint, p_ingredient_id bigint, p_regional_province_id bigint, p_quantity_per_unit integer, p_unit_price numeric, p_units_in_stock integer, p_hidden boolean, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 320 (class 1255 OID 26066)
-- Name: sp_supplier_goods_delete(bigint, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_supplier_goods_delete(p_supplier_goods_id bigint, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE FROM supplier_goods 
	WHERE supplier_goods_id = p_supplier_goods_id;
	COMMIT;
	p_success = 1;
end; 
$$;


ALTER PROCEDURE public.sp_supplier_goods_delete(p_supplier_goods_id bigint, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 313 (class 1255 OID 26070)
-- Name: sp_supplier_goods_update(bigint, bigint, bigint, integer, numeric, integer, boolean, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_supplier_goods_update(p_supplier_goods_id bigint, p_supplier_id bigint, p_ingredient_id bigint, p_quantity_per_unit integer, p_unit_price numeric, p_units_in_stock integer, p_hidden boolean, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE supplier_goods
	SET supplier_id = p_supplier_id, 
		ingredient_id = p_ingredient_id,
		quantity_per_unit = p_quantity_per_unit, 
		unit_price = p_unit_price,
		units_in_stock = p_units_in_stock,
		hidden = p_hidden,
		updated_date = CURRENT_TIMESTAMP
	WHERE supplier_goods_id = p_supplier_goods_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_supplier_goods_update(p_supplier_goods_id bigint, p_supplier_id bigint, p_ingredient_id bigint, p_quantity_per_unit integer, p_unit_price numeric, p_units_in_stock integer, p_hidden boolean, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 310 (class 1255 OID 26065)
-- Name: sp_supplier_goods_update(bigint, bigint, bigint, bigint, integer, numeric, integer, boolean, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_supplier_goods_update(p_supplier_goods_id bigint, p_supplier_id bigint, p_ingredient_id bigint, p_regional_province_id bigint, p_quantity_per_unit integer, p_unit_price numeric, p_units_in_stock integer, p_hidden boolean, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE supplier_goods
	SET supplier_id = p_supplier_id, 
		ingredient_id = p_ingredient_id,
		regional_province_id = p_regional_province_id,
		quantity_per_unit = p_quantity_per_unit, 
		unit_price = p_unit_price,
		units_in_stock = p_units_in_stock,
		hidden = p_hidden,
		updated_date = CURRENT_TIMESTAMP
	WHERE supplier_goods_id = p_supplier_goods_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_supplier_goods_update(p_supplier_goods_id bigint, p_supplier_id bigint, p_ingredient_id bigint, p_regional_province_id bigint, p_quantity_per_unit integer, p_unit_price numeric, p_units_in_stock integer, p_hidden boolean, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 290 (class 1255 OID 26012)
-- Name: sp_supplier_update(bigint, text, text, text, bigint, text, text, boolean, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.sp_supplier_update(p_supplier_id bigint, p_supplier_name text, p_address text, p_city text, p_postal_code bigint, p_phone text, p_email text, p_hidden boolean, INOUT p_success integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE supplier
	SET supplier_name = p_supplier_name, 
		address = p_address,
		city = p_city,
		postal_code = p_postal_code, 
		phone = p_phone,
		email = p_email,
		hidden = p_hidden,
		updated_date = CURRENT_TIMESTAMP
	WHERE supplier_id = p_supplier_id;
    COMMIT;
	p_success = 1;
END;
$$;


ALTER PROCEDURE public.sp_supplier_update(p_supplier_id bigint, p_supplier_name text, p_address text, p_city text, p_postal_code bigint, p_phone text, p_email text, p_hidden boolean, INOUT p_success integer) OWNER TO postgres;

--
-- TOC entry 217 (class 1259 OID 25554)
-- Name: baker_baker_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.baker ALTER COLUMN baker_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.baker_baker_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 215 (class 1259 OID 25544)
-- Name: customer_customer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.customer ALTER COLUMN customer_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.customer_customer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 203 (class 1259 OID 25414)
-- Name: ingredient_category_ingredient_category_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.ingredient_category ALTER COLUMN ingredient_category_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.ingredient_category_ingredient_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 209 (class 1259 OID 25495)
-- Name: ingredient_ingredient_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.ingredient_detail ALTER COLUMN ingredient_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.ingredient_ingredient_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 227 (class 1259 OID 25661)
-- Name: order_ingredient_detail_order_ingredient_detail_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.order_ingredient_detail ALTER COLUMN order_ingredient_detail_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.order_ingredient_detail_order_ingredient_detail_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 225 (class 1259 OID 25641)
-- Name: order_ingredient_order_ingredient_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.order_ingredient ALTER COLUMN order_ingredient_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.order_ingredient_order_ingredient_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 229 (class 1259 OID 25679)
-- Name: order_pizza_detail_order_pizza_detail_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.order_pizza_detail ALTER COLUMN order_pizza_detail_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.order_pizza_detail_order_pizza_detail_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 223 (class 1259 OID 25609)
-- Name: order_pizza_order_pizza_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.order_pizza ALTER COLUMN order_pizza_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.order_pizza_order_pizza_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 221 (class 1259 OID 25574)
-- Name: pizza_pizza_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.pizza ALTER COLUMN pizza_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.pizza_pizza_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 219 (class 1259 OID 25564)
-- Name: pizza_size_pizza_size_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.pizza_size ALTER COLUMN pizza_size_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.pizza_size_pizza_size_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 213 (class 1259 OID 25532)
-- Name: pizzapoint_goods_pizzapoint_goods_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.baker_goods ALTER COLUMN baker_goods_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.pizzapoint_goods_pizzapoint_goods_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 207 (class 1259 OID 25444)
-- Name: regional_province_regional_province_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.regional_province ALTER COLUMN regional_province_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.regional_province_regional_province_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 237 (class 1259 OID 26096)
-- Name: role; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.role (
    role_id bigint NOT NULL,
    role_name text NOT NULL
);


ALTER TABLE public.role OWNER TO postgres;

--
-- TOC entry 236 (class 1259 OID 26094)
-- Name: role_role_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.role ALTER COLUMN role_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.role_role_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 211 (class 1259 OID 25515)
-- Name: supplier_goods_supplier_goods_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.supplier_goods ALTER COLUMN supplier_goods_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.supplier_goods_supplier_goods_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 205 (class 1259 OID 25434)
-- Name: suppliers_supplier_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.supplier ALTER COLUMN supplier_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.suppliers_supplier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 3108 (class 0 OID 25556)
-- Dependencies: 218
-- Data for Name: baker; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.baker (baker_id, baker_name, address, phone, email, created_date, updated_date, pass, role_id) FROM stdin;
29	mahid	Chemnitz	+492128090707	mahid@live.com	2021-02-01 21:53:21	2021-02-21 02:18:37	1	1
30	tuhin	Chemnitz	+492428508755	tuhin@gmail.com	2021-02-01 22:15:01	2021-02-21 02:18:53	1	1
32	mithilana	Chemnitz	+491958004833	mithila6302@gmail.com	2021-02-01 22:54:40	2021-02-21 02:19:13	1	1
36	akash	Chemnitz	+491767516162	akash@gmail.com	2021-02-10 19:48:46	2021-02-21 02:19:50	1	1
33	baker2	Chemnitz	+493239858593	baker2@gmail.com	2021-02-07 06:08:18	2021-02-21 02:20:56	1	1
37	baker1	Chemnity	+491767651418	baker1@gmail.com	2021-02-12 01:29:03	2021-02-21 02:21:06	1	1
1	salekin	Chemnitz	+491767345264	salekin@gmail.com	2021-02-01 01:10:21	2021-02-21 02:14:13	1	1
6	era	Chemnitz	+491767234242	era6302@gmail.com	2021-02-01 01:15:25	2021-02-21 02:14:42	1	1
7	anwar	Chemnitz	+491427575724	anwar6302@gmail.com	2021-02-01 01:17:21	2021-02-21 02:15:02	1	1
8	wasay	Chemnitz	+490763214182	wasay6302@gmail.com	2021-02-01 01:18:29	2021-02-21 02:15:33	1	1
11	pabel	Chemnitz	+491767514186	pabel6302@gmail.com	2021-02-01 01:20:49	2021-02-21 02:16:02	1	1
14	asd	Chemnitz	+491763242442	asd@yahoo.com	2021-02-01 01:22:34	2021-02-21 02:16:16	1	1
26	namira	Chemnitz	+492914414143	namira@gmail.com	2021-02-01 01:23:45	2021-02-21 02:16:50	1	1
27	zarif	Chemnitz	+499148879779	zarif@gmail.com	2021-02-01 01:27:24	2021-02-21 02:17:26	1	1
28	samin	Chemnitz	+499323442111	samin@outlook.com	2021-02-01 01:28:56	2021-02-21 02:18:09	1	1
\.


--
-- TOC entry 3104 (class 0 OID 25534)
-- Dependencies: 214
-- Data for Name: baker_goods; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.baker_goods (baker_goods_id, ingredient_id, quantity_per_unit, unit_price, units_in_stock, created_date, updated_date, hidden) FROM stdin;
6	16	30	0.50	177	2021-02-21 02:39:18	2021-02-21 16:07:06	f
17	21	5	1.50	298	2021-02-21 02:54:37	2021-02-21 16:07:06	f
16	17	40	0.50	296	2021-02-21 02:39:18	2021-02-22 23:23:41	f
13	18	10	2.00	7497	2021-02-21 02:39:18	2021-02-22 23:23:41	f
4	1	10	0.50	150	2021-02-09 23:47:32	2021-02-21 02:35:18	t
5	5	10	0.50	496	2021-02-21 02:39:18	2021-02-23 09:08:03	f
3	2	19	0.50	1632	2021-02-09 02:42:31	2021-02-23 09:08:03	f
18	10	0	0.00	460	2021-02-23 09:12:42	\N	t
2	3	12	1.00	1064	2021-02-09 01:49:08	2021-02-23 09:13:25	t
8	15	14	1.00	197	2021-02-21 02:39:18	2021-02-23 18:19:22	f
15	7	16	0.50	548	2021-02-21 02:39:18	2021-02-23 18:19:22	f
10	12	16	0.50	296	2021-02-21 02:39:18	2021-02-23 18:19:22	f
9	9	30	1.00	194	2021-02-21 02:39:18	2021-02-23 18:19:22	f
11	6	12	0.50	880	2021-02-21 02:39:18	2021-02-23 18:19:22	f
7	11	15	0.50	198	2021-02-21 02:39:18	2021-02-23 18:19:22	f
12	8	22	0.50	848	2021-02-21 02:39:18	2021-02-23 18:19:22	f
\.


--
-- TOC entry 3106 (class 0 OID 25546)
-- Dependencies: 216
-- Data for Name: customer; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.customer (customer_id, customer_name, address, phone, email, shipping_info, created_date, updated_date, pass, role_id) FROM stdin;
2	nahid	Kalabagan	43535345	nahid01@gmail.com	same as address	2021-02-02 02:51:47	2021-02-02 02:52:05	\N	2
3	sirajus	germany	092323	gmail.com	same	2021-02-07 17:45:12	\N	1234	2
4	era	Kalabagan	43535345	era@gmail.com	same as address	2021-02-07 18:09:38	\N	122	2
5	tuhin	dhanmondi	4344	era@gmail.com		2021-02-07 18:10:19	\N	122	2
6	Sirajus Salekin Prodhan	RitterStraße 9	+4917676514189	salekin01@outlook.com		2021-02-07 18:54:50	\N	12	2
1	opurbo	Kalabagan	91142424	opurbo@gmail.com	same as address	2021-02-02 02:36:35	\N	123	2
7	Jihad	Germany	0981231313	Jihad01@gmail.com		2021-02-08 06:16:35	\N	123	2
8	Sirajus Salekin Prodhan	RitterStraße 9	+4917676514189	salekin01@outlook.com		2021-02-08 07:49:29	\N	12	2
9	cus	Germany	+4917676514189	cus@gmail.com		2021-02-08 08:23:06	\N	12	2
10	customer1	Chemnitz	+4917676514189	customer1@gmail.com	DHL	2021-02-12 01:31:08	\N	1	2
11	customer2	Chemnitz	+4917676514179	customer2@gmail.com		2021-02-21 04:00:38	\N	1	2
\.


--
-- TOC entry 3094 (class 0 OID 25416)
-- Dependencies: 204
-- Data for Name: ingredient_category; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.ingredient_category (ingredient_category_id, category_name, created_date, updated_date) FROM stdin;
2	oil	2021-02-02 00:21:21	\N
3	fish	2021-02-10 00:10:31	\N
1	sauce	2021-02-02 00:21:45	\N
4	vegetable	2021-02-10 00:10:40	\N
5	meat	2021-02-10 00:10:45	\N
6	fruit	2021-02-10 00:10:50	\N
8	other	2021-02-10 00:11:05	\N
7	cheese	2021-02-10 00:10:55	\N
\.


--
-- TOC entry 3100 (class 0 OID 25497)
-- Dependencies: 210
-- Data for Name: ingredient_detail; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.ingredient_detail (ingredient_id, ingredient_name, ingredient_category_id, regional_province_id, created_date, updated_date) FROM stdin;
3	herb sauce	1	1	2021-02-08 18:00:03	\N
2	yogurt garlic sauce	1	1	2021-02-08 18:01:55	\N
1	chili sauce	1	1	2021-02-08 18:01:43	2021-02-08 20:04:33
4	vinegar oil	2	2	2021-02-08 20:01:43	\N
5	onion	4	2	2021-02-21 00:14:36	\N
6	tomato	4	4	2021-02-21 00:15:08	\N
7	garlic	4	4	2021-02-21 00:16:08	\N
8	corn	4	4	2021-02-21 00:17:09	\N
9	tuna	3	3	2021-02-21 00:20:08	\N
10	sardinan	3	3	2021-02-21 00:20:46	\N
11	mozzarella cheese	7	3	2021-02-21 00:24:57	\N
12	gorgonzola cheese	7	3	2021-02-21 00:26:12	\N
14	egg	8	5	2021-02-21 00:29:03	\N
15	spaghetti	8	5	2021-02-21 00:29:27	\N
16	fried egg	8	5	2021-02-21 00:29:48	\N
17	mushroom	5	6	2021-02-21 00:32:27	\N
18	chicken	5	6	2021-02-21 00:33:11	\N
19	beaf	5	6	2021-02-21 00:33:43	\N
20	spinach	4	13	2021-02-21 00:34:16	\N
21	cucumber	4	13	2021-02-21 00:34:49	\N
22	pea	4	13	2021-02-21 00:35:20	\N
23	broccoli	4	13	2021-02-21 00:35:51	\N
24	paprika	4	13	2021-02-21 00:36:32	\N
25	pineapple	6	12	2021-02-21 00:37:28	\N
26	banana	6	12	2021-02-21 00:38:21	\N
27	avocado	6	12	2021-02-21 00:39:37	\N
28	hot chilli pepper	4	14	2021-02-21 00:41:40	\N
13	feta cheese	7	3	2021-02-21 00:27:25	2021-02-21 00:42:11
\.


--
-- TOC entry 3116 (class 0 OID 25643)
-- Dependencies: 226
-- Data for Name: order_ingredient; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.order_ingredient (order_ingredient_id, order_date, required_date, shipped_date, ship_via) FROM stdin;
6	2021-02-09 20:59:12	2021-02-09 20:59:12	2021-02-09 20:59:12	DHL
7	2021-02-09 21:01:53	2021-02-09 21:01:53	2021-02-09 21:01:53	DHL
8	2021-02-09 21:44:34	2021-02-09 21:44:34	2021-02-09 21:44:34	DHL
9	2021-02-09 21:50:49	2021-02-09 21:50:49	2021-02-09 21:50:49	DHL
10	2021-02-09 21:56:01	2021-02-09 21:56:01	2021-02-09 21:56:01	DHL
11	2021-02-09 21:57:21	2021-02-09 21:57:21	2021-02-09 21:57:21	DHL
12	2021-02-09 22:02:51	2021-02-09 22:02:51	2021-02-09 22:02:51	DHL
13	2021-02-09 22:08:48	2021-02-09 22:08:48	2021-02-09 22:08:48	DHL
14	2021-02-09 22:14:47	2021-02-09 22:14:47	2021-02-09 22:14:47	DHL
15	2021-02-09 22:15:52	2021-02-09 22:15:52	2021-02-09 22:15:52	DHL
16	2021-02-09 22:16:04	2021-02-09 22:16:04	2021-02-09 22:16:04	DHL
17	2021-02-09 22:17:04	2021-02-09 22:17:04	2021-02-09 22:17:04	DHL
18	2021-02-09 22:17:49	2021-02-09 22:17:49	2021-02-09 22:17:49	DHL
19	2021-02-09 22:19:11	2021-02-09 22:19:11	2021-02-09 22:19:11	DHL
20	2021-02-09 22:21:46	2021-02-09 22:21:46	2021-02-09 22:21:46	DHL
21	2021-02-09 22:22:36	2021-02-09 22:22:36	2021-02-09 22:22:36	DHL
22	2021-02-09 22:25:13	2021-02-09 22:25:13	2021-02-09 22:25:13	DHL
23	2021-02-09 22:27:36	2021-02-09 22:27:36	2021-02-09 22:27:36	DHL
24	2021-02-09 22:28:54	2021-02-09 22:28:54	2021-02-09 22:28:54	DHL
25	2021-02-09 22:30:23	2021-02-09 22:30:23	2021-02-09 22:30:23	DHL
26	2021-02-09 22:31:33	2021-02-09 22:31:33	2021-02-09 22:31:33	DHL
27	2021-02-09 22:32:14	2021-02-09 22:32:14	2021-02-09 22:32:14	DHL
28	2021-02-09 22:33:20	2021-02-09 22:33:20	2021-02-09 22:33:20	DHL
29	2021-02-09 22:43:33	2021-02-09 22:43:33	2021-02-09 22:43:33	DHL
30	2021-02-09 22:56:58	2021-02-09 22:56:58	2021-02-09 22:56:58	DHL
31	2021-02-09 23:02:58	2021-02-09 23:02:58	2021-02-09 23:02:58	DHL
32	2021-02-09 23:07:12	2021-02-09 23:07:12	2021-02-09 23:07:12	DHL
33	2021-02-09 23:14:05	2021-02-09 23:14:05	2021-02-09 23:14:05	DHL
34	2021-02-09 23:16:41	2021-02-09 23:16:41	2021-02-09 23:16:41	DHL
35	2021-02-09 23:17:28	2021-02-09 23:17:28	2021-02-09 23:17:28	DHL
36	2021-02-09 23:19:25	2021-02-09 23:19:25	2021-02-09 23:19:25	DHL
37	2021-02-09 23:26:18	2021-02-09 23:26:18	2021-02-09 23:26:18	DHL
38	2021-02-09 23:26:54	2021-02-09 23:26:54	2021-02-09 23:26:54	DHL
39	2021-02-09 23:46:17	2021-02-09 23:46:17	2021-02-09 23:46:17	DHL
40	2021-02-09 23:47:32	2021-02-09 23:47:32	2021-02-09 23:47:32	DHL
41	2021-02-09 23:53:05	2021-02-09 23:53:05	2021-02-09 23:53:05	DHL
42	2021-02-09 23:55:08	2021-02-09 23:55:08	2021-02-09 23:55:08	DHL
43	2021-02-09 23:55:45	2021-02-09 23:55:45	2021-02-09 23:55:45	DHL
44	2021-02-09 23:57:36	2021-02-09 23:57:36	2021-02-09 23:57:36	DHL
45	2021-02-10 00:03:11	2021-02-10 00:03:11	2021-02-10 00:03:11	DHL
46	2021-02-21 02:39:18	2021-02-21 02:39:18	2021-02-21 02:39:18	DHL
47	2021-02-21 02:41:46	2021-02-21 02:41:46	2021-02-21 02:41:46	DHL
48	2021-02-21 02:43:02	2021-02-21 02:43:02	2021-02-21 02:43:02	DHL
49	2021-02-21 02:54:37	2021-02-21 02:54:37	2021-02-21 02:54:37	DHL
50	2021-02-21 14:34:07	2021-02-21 14:34:07	2021-02-21 14:34:07	DHL
51	2021-02-21 14:34:48	2021-02-21 14:34:48	2021-02-21 14:34:48	DHL
52	2021-02-22 22:43:23	2021-02-22 22:43:23	2021-02-22 22:43:23	DHL
53	2021-02-22 22:46:55	2021-02-22 22:46:55	2021-02-22 22:46:55	DHL
54	2021-02-22 22:50:20	2021-02-22 22:50:20	2021-02-22 22:50:20	DHL
55	2021-02-23 09:12:42	2021-02-23 09:12:42	2021-02-23 09:12:42	DHL
\.


--
-- TOC entry 3118 (class 0 OID 25663)
-- Dependencies: 228
-- Data for Name: order_ingredient_detail; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.order_ingredient_detail (order_ingredient_detail_id, order_ingredient_id, supplier_goods_id, quantity, total_price, created_date) FROM stdin;
1	29	1	30	300.00	2021-02-09 22:54:54
3	30	2	50	250.00	2021-02-09 22:57:36
4	31	2	50	250.00	2021-02-09 23:02:58
5	32	2	50	250.00	2021-02-09 23:07:12
6	33	2	50	250.00	2021-02-09 23:14:05
7	34	2	50	250.00	2021-02-09 23:16:41
8	35	2	50	250.00	2021-02-09 23:17:28
9	36	2	50	250.00	2021-02-09 23:19:25
10	37	2	50	250.00	2021-02-09 23:26:18
11	37	2	50	250.00	2021-02-09 23:26:18
12	38	3	100	1800.00	2021-02-09 23:26:54
13	39	2	50	250.00	2021-02-09 23:46:17
14	39	2	50	250.00	2021-02-09 23:46:17
15	40	3	50	900.00	2021-02-09 23:47:32
16	41	2	30	150.00	2021-02-09 23:53:05
17	41	2	30	150.00	2021-02-09 23:53:05
18	42	3	50	900.00	2021-02-09 23:55:08
19	43	2	50	250.00	2021-02-09 23:55:45
20	43	2	50	250.00	2021-02-09 23:55:45
21	44	2	50	250.00	2021-02-09 23:58:06
22	44	2	50	250.00	2021-02-09 23:58:54
23	45	3	50	900.00	2021-02-10 00:03:28
24	45	2	50	250.00	2021-02-10 00:03:28
27	46	17	200	7000.00	2021-02-21 02:39:18
29	46	14	200	3000.00	2021-02-21 02:39:18
28	46	5	180	3240.00	2021-02-21 02:39:18
25	46	8	500	18000.00	2021-02-21 02:39:18
26	46	12	200	4800.00	2021-02-21 02:39:18
30	46	15	300	7200.00	2021-02-21 02:39:18
31	46	9	888	40848.00	2021-02-21 02:39:18
32	46	11	855	39330.00	2021-02-21 02:39:18
33	46	25	7000	420000.00	2021-02-21 02:39:18
34	46	23	400	11200.00	2021-02-21 02:39:18
35	46	10	555	18870.00	2021-02-21 02:39:18
36	46	19	300	9000.00	2021-02-21 02:39:18
37	46	20	400	8000.00	2021-02-21 02:39:18
38	47	23	200	5600.00	2021-02-21 02:41:46
39	48	23	100	2800.00	2021-02-21 02:43:02
40	49	23	200	5600.00	2021-02-21 02:54:37
41	50	23	100	2800.00	2021-02-21 14:34:07
42	51	6	100	3000.00	2021-02-21 14:34:49
43	53	1	1170	11700.00	2021-02-22 22:46:55
44	54	1	20	200.00	2021-02-22 22:50:20
45	55	13	460	4600.00	2021-02-23 09:12:42
46	55	2	92	460.00	2021-02-23 09:12:42
\.


--
-- TOC entry 3114 (class 0 OID 25611)
-- Dependencies: 224
-- Data for Name: order_pizza; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.order_pizza (order_pizza_id, pizza_id, customer_id, quantity, discount, total_price, order_date, required_date, shipped_date, ship_via, canceled) FROM stdin;
2	2	9	1	0	14.50	2021-02-10 09:50:16	2021-02-10 09:50:16	2021-02-10 09:50:16	DHL	f
3	3	9	1	0	4.50	2021-02-10 09:56:46	2021-02-10 09:56:46	2021-02-10 09:56:46	DHL	f
5	1	9	1	0	15.00	2021-02-10 10:02:59	2021-02-10 10:02:59	2021-02-10 10:02:59	DHL	f
6	1	9	1	0	15.00	2021-02-10 10:06:16	2021-02-10 10:06:16	2021-02-10 10:06:16	DHL	f
7	2	9	1	0	14.50	2021-02-10 10:11:22	2021-02-10 10:11:22	2021-02-10 10:11:22	DHL	f
8	3	9	1	0	14.50	2021-02-10 10:12:55	2021-02-10 10:12:55	2021-02-10 10:12:55	DHL	f
9	1	9	1	0	15.00	2021-02-10 10:16:37	2021-02-10 10:16:37	2021-02-10 10:16:37	DHL	f
1	1	9	1	0	5.00	2021-02-10 09:17:36	2021-02-10 09:17:36	2021-02-10 09:17:36	DHL	f
11	1	9	1	0	40.00	2021-02-10 10:22:50	2021-02-10 10:22:50	2021-02-10 10:22:50	DHL	t
10	2	9	1	0	14.50	2021-02-10 10:20:54	2021-02-10 10:20:54	2021-02-10 10:20:54	DHL	t
4	1	9	1	0	15.00	2021-02-10 09:57:32	2021-02-10 09:57:32	2021-02-10 09:57:32	DHL	t
12	4	9	1	0	28.50	2021-02-18 14:07:14	2021-02-18 14:07:14	2021-02-18 14:07:14	DHL	f
13	4	9	1	0	28.50	2021-02-20 21:04:20	2021-02-20 21:04:20	2021-02-20 21:04:20	DHL	f
14	4	9	1	0	28.50	2021-02-20 21:12:24	2021-02-20 21:12:24	2021-02-20 21:12:24	DHL	f
15	4	9	1	0	28.50	2021-02-20 21:22:11	2021-02-20 21:22:11	2021-02-20 21:22:11	DHL	f
16	4	9	1	0	28.50	2021-02-20 21:23:22	2021-02-20 21:23:22	2021-02-20 21:23:22	DHL	f
17	3	10	1	0	39.50	2021-02-20 22:13:56	2021-02-20 22:13:56	2021-02-20 22:13:56	DHL	f
18	6	10	1	0	11.50	2021-02-21 03:57:15	2021-02-21 03:57:15	2021-02-21 03:57:15	DHL	f
19	6	11	1	0	13.00	2021-02-21 04:01:46	2021-02-21 04:01:46	2021-02-21 04:01:46	DHL	f
20	6	10	1	0	11.00	2021-02-21 14:08:57	2021-02-21 14:08:57	2021-02-21 14:08:57	DHL	f
21	4	10	1	0	6.00	2021-02-21 14:16:12	2021-02-21 14:16:12	2021-02-21 14:16:12	DHL	f
22	4	11	1	0	9.50	2021-02-21 16:07:06	2021-02-21 16:07:06	2021-02-21 16:07:06	DHL	f
23	7	10	1	0	9.50	2021-02-22 23:21:25	2021-02-22 23:21:25	2021-02-22 23:21:25	DHL	f
24	4	11	1	0	6.00	2021-02-22 23:23:41	2021-02-22 23:23:41	2021-02-22 23:23:41	DHL	f
26	8	10	1	0	17.00	2021-02-23 09:07:26	2021-02-23 09:07:26	2021-02-23 09:07:26	DHL	f
27	8	10	1	0	17.00	2021-02-23 09:08:03	2021-02-23 09:08:03	2021-02-23 09:08:03	DHL	t
28	7	10	1	0	13.00	2021-02-23 18:18:35	2021-02-23 18:18:35	2021-02-23 18:18:35	DHL	f
29	7	10	1	0	13.00	2021-02-23 18:19:22	2021-02-23 18:19:22	2021-02-23 18:19:22	DHL	f
\.


--
-- TOC entry 3120 (class 0 OID 25681)
-- Dependencies: 230
-- Data for Name: order_pizza_detail; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.order_pizza_detail (order_pizza_detail_id, order_pizza_id, baker_goods_id, created_date) FROM stdin;
1	10	2	2021-02-10 10:21:15
2	11	3	2021-02-10 10:23:04
4	12	3	2021-02-18 14:07:14
5	16	3	2021-02-20 21:24:09
7	17	3	2021-02-20 22:13:56
6	17	2	2021-02-20 22:13:56
9	18	6	2021-02-21 03:57:15
8	18	3	2021-02-21 03:57:15
10	18	2	2021-02-21 03:57:15
11	18	13	2021-02-21 03:57:15
12	18	10	2021-02-21 03:57:15
13	18	16	2021-02-21 03:57:15
14	19	2	2021-02-21 04:01:46
16	19	15	2021-02-21 04:01:46
15	19	6	2021-02-21 04:01:46
17	19	16	2021-02-21 04:01:46
19	19	17	2021-02-21 04:01:46
18	19	8	2021-02-21 04:01:46
20	19	11	2021-02-21 04:01:46
21	19	10	2021-02-21 04:01:46
22	19	12	2021-02-21 04:01:46
23	20	2	2021-02-21 14:08:57
24	20	9	2021-02-21 14:08:57
25	20	11	2021-02-21 14:08:57
26	20	5	2021-02-21 14:08:57
27	20	12	2021-02-21 14:08:57
28	20	3	2021-02-21 14:08:57
29	20	15	2021-02-21 14:08:57
30	22	16	2021-02-21 16:07:06
31	22	6	2021-02-21 16:07:06
32	22	15	2021-02-21 16:07:06
33	22	11	2021-02-21 16:07:06
34	22	13	2021-02-21 16:07:06
35	22	17	2021-02-21 16:07:06
36	22	12	2021-02-21 16:07:06
37	23	9	2021-02-22 23:21:25
38	24	16	2021-02-22 23:23:41
39	24	13	2021-02-22 23:23:41
42	26	5	2021-02-23 09:07:26
43	26	3	2021-02-23 09:07:26
44	26	15	2021-02-23 09:07:26
45	26	2	2021-02-23 09:07:26
46	26	12	2021-02-23 09:07:26
47	26	11	2021-02-23 09:07:26
48	26	9	2021-02-23 09:07:26
49	27	12	2021-02-23 09:08:03
50	27	5	2021-02-23 09:08:03
51	27	11	2021-02-23 09:08:03
52	27	3	2021-02-23 09:08:03
53	27	9	2021-02-23 09:08:03
54	27	15	2021-02-23 09:08:03
55	27	2	2021-02-23 09:08:03
56	28	8	2021-02-23 18:18:35
57	28	9	2021-02-23 18:18:35
59	28	12	2021-02-23 18:18:35
58	28	11	2021-02-23 18:18:35
60	28	7	2021-02-23 18:18:35
61	28	10	2021-02-23 18:18:35
62	28	15	2021-02-23 18:18:35
63	29	8	2021-02-23 18:19:22
64	29	15	2021-02-23 18:19:22
65	29	10	2021-02-23 18:19:22
66	29	9	2021-02-23 18:19:22
67	29	11	2021-02-23 18:19:22
68	29	7	2021-02-23 18:19:22
69	29	12	2021-02-23 18:19:22
\.


--
-- TOC entry 3112 (class 0 OID 25576)
-- Dependencies: 222
-- Data for Name: pizza; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.pizza (pizza_id, pizza_name, pizza_size_id, price, in_stock, created_date, updated_date, image_url, description) FROM stdin;
7	Pizza Fresca	4	8.50	247	2021-02-21 03:46:43	2021-02-21 03:47:00	https://live.staticflickr.com/65535/50929700148_529bce9011_z.jpg	Choice of: with chicken, with veal, with chili dressing, with oil and vinegar dressing and more.
3	Pizza Capricciosa	1	4.50	197	2021-02-10 04:40:47	2021-02-21 03:00:19	https://live.staticflickr.com/65535/50930509362_391b48a1be_z.jpg	Choice of: with chili sauce, with vinegar-oil, with yogurt-garlic sauce, with herb sauce, tomato and more.
2	Pizza Babo	1	4.50	197	2021-02-10 04:26:04	2021-02-21 03:00:39	https://live.staticflickr.com/65535/50929700268_5a15273159_z.jpg	Choice of: with chili sauce, with vinegar-oil, with yogurt-garlic sauce, with herb sauce, tomato and more.
10	test	7	20.00	50	2021-02-23 18:22:01	\N		
6	Pizza Asparagus	3	6.50	347	2021-02-21 03:34:18	2021-02-21 03:34:26	https://live.staticflickr.com/65535/50930509517_4e6c9afb13_z.jpg	Choice of: with chili dressing, with vinegar and oil dressing, with yogurt and garlic dressing, with herb dressing and more.
4	Pizza Chicken	2	3.50	692	2021-02-10 03:58:27	2021-02-21 02:59:47	https://live.staticflickr.com/65535/50930384191_68bd0cfc74_z.jpg	Choice of: with chili sauce, with vinegar-oil, with yogurt-garlic sauce, with herb sauce, tomato and more.
8	Pizza Margherita Plus	5	12.50	368	2021-02-21 03:50:29	2021-02-21 03:51:59	https://live.staticflickr.com/65535/50930383986_0fb314a25d_z.jpg	Choice of: with chili dressing, with vinegar and oil dressing, with yogurt and garlic dressing, with herb dressing and more.
1	Pizza Asparagus	1	5.00	244	2021-02-02 03:58:27	2021-02-12 01:27:08	https://live.staticflickr.com/65535/50930509517_4e6c9afb13_z.jpg	Choice of: with chili dressing, with vinegar and oil dressing, with yogurt and garlic dressing, with herb dressing and more.
\.


--
-- TOC entry 3110 (class 0 OID 25566)
-- Dependencies: 220
-- Data for Name: pizza_size; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.pizza_size (pizza_size_id, size_in_inch, size_in_text, total_slice, created_date, updated_date) FROM stdin;
1	8	personal	4	2021-02-02 01:14:34	2021-02-02 01:15:07
2	10	small	4	2021-02-10 14:34:13	\N
3	12	medium	6	2021-02-10 14:34:33	\N
4	14	large	6	2021-02-10 14:35:06	\N
5	16	extra-large	8	2021-02-10 14:35:27	\N
6	18	jumbo	8	2021-02-10 14:36:07	\N
7	21	Colossal	10	2021-02-10 14:36:38	\N
\.


--
-- TOC entry 3098 (class 0 OID 25446)
-- Dependencies: 208
-- Data for Name: regional_province; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.regional_province (regional_province_id, regional_province_name, created_date, updated_date) FROM stdin;
1	Baden-Württemberg	2021-02-08 16:24:00	\N
2	Bavaria	2021-02-08 16:25:30	\N
4	Brandenburg	2021-02-08 16:25:00	\N
3	Berlin	2021-02-08 16:25:45	\N
5	Bremen	2021-02-08 16:49:02	\N
6	Hamburg	2021-02-08 16:49:25	\N
7	Hesse	2021-02-08 16:49:49	\N
8	Lower Saxony	2021-02-08 16:50:01	\N
9	Mecklenburg-Vorpommern	2021-02-08 16:50:25	\N
10	North Rhine-Westphalia	2021-02-08 16:50:45	\N
11	Rhineland-Palatinate	2021-02-08 16:51:00	\N
12	Saarland	2021-02-08 16:51:12	\N
13	Saxony	2021-02-08 16:51:32	\N
14	Saxony-Anhalt	2021-02-08 16:51:46	\N
15	Schleswig-Holstein	2021-02-08 16:51:59	\N
16	Thuringia	2021-02-08 16:52:14	\N
\.


--
-- TOC entry 3122 (class 0 OID 26096)
-- Dependencies: 237
-- Data for Name: role; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.role (role_id, role_name) FROM stdin;
1	BAKER
2	CUSTOMER
\.


--
-- TOC entry 3096 (class 0 OID 25436)
-- Dependencies: 206
-- Data for Name: supplier; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.supplier (supplier_id, supplier_name, address, city, postal_code, phone, email, created_date, updated_date, hidden) FROM stdin;
4	supplier3	Postdam	Postdam	24324	+491777516184	supplier3@yahoo.com	2021-02-02 02:21:03	2021-02-21 01:15:48	f
2	supplier2	Berlin	Berlin	1678	+499114242451	supplier2@gmail.com	2021-02-02 02:14:59	2021-02-21 01:16:05	f
5	supplier4	Bavaria	Munich	1067	+491676415164	supplier4@gmail.com	2021-02-08 13:46:38	2021-02-21 01:18:00	f
1	supplier1	saxony	chemnitz	9111	+491913584138	supplier1@gmail.com	2021-02-08 20:44:30	2021-02-22 23:02:10	f
9	supplier5	Bremen	Bremen	67002	+491999235214	supplier5@outlook.com	2021-02-08 15:44:30	2021-02-23 00:12:03	t
\.


--
-- TOC entry 3102 (class 0 OID 25517)
-- Dependencies: 212
-- Data for Name: supplier_goods; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.supplier_goods (supplier_goods_id, supplier_id, ingredient_id, quantity_per_unit, unit_price, units_in_stock, created_date, updated_date, hidden) FROM stdin;
3	2	1	29	18.00	1950	2021-02-09 03:35:23	2021-02-10 00:03:28	f
4	1	4	40	25.00	2700	2021-02-21 01:22:34	\N	f
7	2	28	110	8.00	2220	2021-02-21 01:25:58	\N	f
16	5	14	340	50.00	5200	2021-02-21 01:32:01	\N	f
18	5	16	120	30.00	6400	2021-02-21 01:33:05	\N	f
21	9	19	60	30.00	3100	2021-02-21 01:34:49	\N	f
22	9	20	100	35.00	1700	2021-02-21 01:35:27	\N	f
24	1	22	320	150.00	4500	2021-02-21 01:36:30	\N	f
8	4	5	70	36.00	5100	2021-02-21 01:26:48	2021-02-21 02:39:18	f
5	2	16	30	18.00	1620	2021-02-21 01:23:51	2021-02-21 02:39:18	f
17	5	15	235	35.00	3000	2021-02-21 01:32:28	2021-02-21 02:39:18	f
14	5	11	120	15.00	2500	2021-02-21 01:31:05	2021-02-21 02:39:18	f
12	4	9	70	24.00	3200	2021-02-21 01:30:03	2021-02-21 02:39:18	f
15	5	12	140	24.00	1400	2021-02-21 01:31:31	2021-02-21 02:39:18	f
9	4	6	37	46.00	4000	2021-02-21 01:28:19	2021-02-21 02:39:18	f
25	1	18	70	60.00	0	2021-02-21 01:37:01	2021-02-21 02:39:18	f
11	4	8	150	46.00	5000	2021-02-21 01:29:10	2021-02-21 02:39:18	f
10	4	7	89	34.00	4000	2021-02-21 01:28:38	2021-02-21 02:39:18	f
19	9	17	200	30.00	2400	2021-02-21 01:33:40	2021-02-21 02:39:18	f
20	9	18	60	20.00	4200	2021-02-21 01:34:19	2021-02-21 02:39:18	f
23	9	21	120	28.00	2100	2021-02-21 01:35:54	2021-02-21 14:34:07	f
6	2	18	50	30.00	3300	2021-02-21 01:24:26	2021-02-21 14:34:49	f
1	1	2	15	10.00	3380	2021-02-08 10:15:59	2021-02-22 22:50:20	f
13	5	10	230	10.00	4140	2021-02-21 01:30:31	2021-02-23 09:12:42	f
2	1	3	10	5.00	9108	2021-02-08 21:54:59	2021-02-23 09:12:42	f
\.


--
-- TOC entry 3129 (class 0 OID 0)
-- Dependencies: 217
-- Name: baker_baker_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.baker_baker_id_seq', 37, true);


--
-- TOC entry 3130 (class 0 OID 0)
-- Dependencies: 215
-- Name: customer_customer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.customer_customer_id_seq', 11, true);


--
-- TOC entry 3131 (class 0 OID 0)
-- Dependencies: 203
-- Name: ingredient_category_ingredient_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.ingredient_category_ingredient_category_id_seq', 8, true);


--
-- TOC entry 3132 (class 0 OID 0)
-- Dependencies: 209
-- Name: ingredient_ingredient_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.ingredient_ingredient_id_seq', 29, true);


--
-- TOC entry 3133 (class 0 OID 0)
-- Dependencies: 227
-- Name: order_ingredient_detail_order_ingredient_detail_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.order_ingredient_detail_order_ingredient_detail_id_seq', 46, true);


--
-- TOC entry 3134 (class 0 OID 0)
-- Dependencies: 225
-- Name: order_ingredient_order_ingredient_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.order_ingredient_order_ingredient_id_seq', 55, true);


--
-- TOC entry 3135 (class 0 OID 0)
-- Dependencies: 229
-- Name: order_pizza_detail_order_pizza_detail_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.order_pizza_detail_order_pizza_detail_id_seq', 69, true);


--
-- TOC entry 3136 (class 0 OID 0)
-- Dependencies: 223
-- Name: order_pizza_order_pizza_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.order_pizza_order_pizza_id_seq', 29, true);


--
-- TOC entry 3137 (class 0 OID 0)
-- Dependencies: 221
-- Name: pizza_pizza_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.pizza_pizza_id_seq', 10, true);


--
-- TOC entry 3138 (class 0 OID 0)
-- Dependencies: 219
-- Name: pizza_size_pizza_size_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.pizza_size_pizza_size_id_seq', 7, true);


--
-- TOC entry 3139 (class 0 OID 0)
-- Dependencies: 213
-- Name: pizzapoint_goods_pizzapoint_goods_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.pizzapoint_goods_pizzapoint_goods_id_seq', 18, true);


--
-- TOC entry 3140 (class 0 OID 0)
-- Dependencies: 207
-- Name: regional_province_regional_province_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.regional_province_regional_province_id_seq', 16, true);


--
-- TOC entry 3141 (class 0 OID 0)
-- Dependencies: 236
-- Name: role_role_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.role_role_id_seq', 2, true);


--
-- TOC entry 3142 (class 0 OID 0)
-- Dependencies: 211
-- Name: supplier_goods_supplier_goods_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.supplier_goods_supplier_goods_id_seq', 25, true);


--
-- TOC entry 3143 (class 0 OID 0)
-- Dependencies: 205
-- Name: suppliers_supplier_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.suppliers_supplier_id_seq', 9, true);


--
-- TOC entry 2934 (class 2606 OID 25538)
-- Name: baker_goods baker_goods_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.baker_goods
    ADD CONSTRAINT baker_goods_pkey PRIMARY KEY (baker_goods_id);


--
-- TOC entry 2938 (class 2606 OID 25563)
-- Name: baker baker_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.baker
    ADD CONSTRAINT baker_pkey PRIMARY KEY (baker_id);


--
-- TOC entry 2936 (class 2606 OID 25553)
-- Name: customer customer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer
    ADD CONSTRAINT customer_pkey PRIMARY KEY (customer_id);


--
-- TOC entry 2924 (class 2606 OID 25423)
-- Name: ingredient_category ingredient_category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ingredient_category
    ADD CONSTRAINT ingredient_category_pkey PRIMARY KEY (ingredient_category_id);


--
-- TOC entry 2930 (class 2606 OID 25504)
-- Name: ingredient_detail ingredient_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ingredient_detail
    ADD CONSTRAINT ingredient_pkey PRIMARY KEY (ingredient_id);


--
-- TOC entry 2948 (class 2606 OID 25667)
-- Name: order_ingredient_detail order_ingredient_detail_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.order_ingredient_detail
    ADD CONSTRAINT order_ingredient_detail_pkey PRIMARY KEY (order_ingredient_detail_id);


--
-- TOC entry 2946 (class 2606 OID 25650)
-- Name: order_ingredient order_ingredient_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.order_ingredient
    ADD CONSTRAINT order_ingredient_pkey PRIMARY KEY (order_ingredient_id);


--
-- TOC entry 2950 (class 2606 OID 25685)
-- Name: order_pizza_detail order_pizza_detail_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.order_pizza_detail
    ADD CONSTRAINT order_pizza_detail_pkey PRIMARY KEY (order_pizza_detail_id);


--
-- TOC entry 2944 (class 2606 OID 25618)
-- Name: order_pizza order_pizza_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.order_pizza
    ADD CONSTRAINT order_pizza_pkey PRIMARY KEY (order_pizza_id);


--
-- TOC entry 2942 (class 2606 OID 25583)
-- Name: pizza pizza_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pizza
    ADD CONSTRAINT pizza_pkey PRIMARY KEY (pizza_id);


--
-- TOC entry 2940 (class 2606 OID 25989)
-- Name: pizza_size pizza_size_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pizza_size
    ADD CONSTRAINT pizza_size_pkey PRIMARY KEY (pizza_size_id);


--
-- TOC entry 2928 (class 2606 OID 25453)
-- Name: regional_province regional_province_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.regional_province
    ADD CONSTRAINT regional_province_pkey PRIMARY KEY (regional_province_id);


--
-- TOC entry 2952 (class 2606 OID 26104)
-- Name: role role_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role
    ADD CONSTRAINT role_pkey PRIMARY KEY (role_id);


--
-- TOC entry 2932 (class 2606 OID 25521)
-- Name: supplier_goods supplier_goods_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier_goods
    ADD CONSTRAINT supplier_goods_pkey PRIMARY KEY (supplier_goods_id);


--
-- TOC entry 2926 (class 2606 OID 25443)
-- Name: supplier suppliers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier
    ADD CONSTRAINT suppliers_pkey PRIMARY KEY (supplier_id);


--
-- TOC entry 2966 (class 2606 OID 25691)
-- Name: order_pizza_detail fk_baker_goods_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.order_pizza_detail
    ADD CONSTRAINT fk_baker_goods_id FOREIGN KEY (baker_goods_id) REFERENCES public.baker_goods(baker_goods_id);


--
-- TOC entry 2962 (class 2606 OID 25624)
-- Name: order_pizza fk_customer_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.order_pizza
    ADD CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES public.customer(customer_id);


--
-- TOC entry 2953 (class 2606 OID 25505)
-- Name: ingredient_detail fk_ingredient_category_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ingredient_detail
    ADD CONSTRAINT fk_ingredient_category_id FOREIGN KEY (ingredient_category_id) REFERENCES public.ingredient_category(ingredient_category_id);


--
-- TOC entry 2956 (class 2606 OID 25527)
-- Name: supplier_goods fk_ingredient_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier_goods
    ADD CONSTRAINT fk_ingredient_id FOREIGN KEY (ingredient_id) REFERENCES public.ingredient_detail(ingredient_id);


--
-- TOC entry 2957 (class 2606 OID 26188)
-- Name: baker_goods fk_ingredient_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.baker_goods
    ADD CONSTRAINT fk_ingredient_id FOREIGN KEY (ingredient_id) REFERENCES public.ingredient_detail(ingredient_id) NOT VALID;


--
-- TOC entry 2963 (class 2606 OID 25668)
-- Name: order_ingredient_detail fk_order_ingredient_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.order_ingredient_detail
    ADD CONSTRAINT fk_order_ingredient_id FOREIGN KEY (order_ingredient_id) REFERENCES public.order_ingredient(order_ingredient_id);


--
-- TOC entry 2965 (class 2606 OID 25686)
-- Name: order_pizza_detail fk_order_pizza_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.order_pizza_detail
    ADD CONSTRAINT fk_order_pizza_id FOREIGN KEY (order_pizza_id) REFERENCES public.order_pizza(order_pizza_id);


--
-- TOC entry 2961 (class 2606 OID 25619)
-- Name: order_pizza fk_pizza_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.order_pizza
    ADD CONSTRAINT fk_pizza_id FOREIGN KEY (pizza_id) REFERENCES public.pizza(pizza_id);


--
-- TOC entry 2960 (class 2606 OID 26029)
-- Name: pizza fk_pizza_size_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pizza
    ADD CONSTRAINT fk_pizza_size_id FOREIGN KEY (pizza_size_id) REFERENCES public.pizza_size(pizza_size_id);


--
-- TOC entry 2954 (class 2606 OID 25510)
-- Name: ingredient_detail fk_regional_province_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ingredient_detail
    ADD CONSTRAINT fk_regional_province_id FOREIGN KEY (regional_province_id) REFERENCES public.regional_province(regional_province_id);


--
-- TOC entry 2958 (class 2606 OID 26105)
-- Name: customer fk_role_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer
    ADD CONSTRAINT fk_role_id FOREIGN KEY (role_id) REFERENCES public.role(role_id) NOT VALID;


--
-- TOC entry 2959 (class 2606 OID 26115)
-- Name: baker fk_role_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.baker
    ADD CONSTRAINT fk_role_id FOREIGN KEY (role_id) REFERENCES public.role(role_id) NOT VALID;


--
-- TOC entry 2964 (class 2606 OID 25673)
-- Name: order_ingredient_detail fk_supplier_goods_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.order_ingredient_detail
    ADD CONSTRAINT fk_supplier_goods_id FOREIGN KEY (supplier_goods_id) REFERENCES public.supplier_goods(supplier_goods_id);


--
-- TOC entry 2955 (class 2606 OID 25522)
-- Name: supplier_goods fk_supplier_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier_goods
    ADD CONSTRAINT fk_supplier_id FOREIGN KEY (supplier_id) REFERENCES public.supplier(supplier_id);


-- Completed on 2021-02-24 00:03:25

--
-- PostgreSQL database dump complete
--

